


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>Snap.svg/dist/snap.svg-min.js at master · adobe-webplatform/Snap.svg · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta property="og:image" content="https://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png">
    <meta name="hostname" content="github-fe137-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 2.1.0p0-github-tcmalloc (60139581e1) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="AD46BEA9:2BC5:C7289C:52DDBA1C" name="octolytics-dimension-request_id" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="KfOkcDfZUYbjr7ILyNjJ2gARc+Qb4t/cJJtg8IcjihI=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-afd65da2802beafd8aee40df66e8b576092b2913.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-1ea5d7ff68089751db2cd7bd5fb3ba79c66f7657.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://github.global.ssl.fastly.net/assets/frameworks-bf5987648bb83690ac0a5e955f74bbaf6ba44c4a.js" type="text/javascript"></script>
      <script async="async" defer="defer" src="https://github.global.ssl.fastly.net/assets/github-d14e01481c9349339c64603ff5a34b2be29c981d.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="5e69d9563e7c390c8c38d173b3818aab">

        <link data-pjax-transient rel='permalink' href='/adobe-webplatform/Snap.svg/blob/4d9fd5ef7af71da4a301b8398a9f25cfa38396f0/dist/snap.svg-min.js'>
  <meta property="og:title" content="Snap.svg"/>
  <meta property="og:type" content="githubog:gitrepository"/>
  <meta property="og:url" content="https://github.com/adobe-webplatform/Snap.svg"/>
  <meta property="og:image" content="https://github.global.ssl.fastly.net/images/gravatars/gravatar-user-420.png"/>
  <meta property="og:site_name" content="GitHub"/>
  <meta property="og:description" content="Snap.svg - The JavaScript library for modern SVG graphics."/>

  <meta name="description" content="Snap.svg - The JavaScript library for modern SVG graphics." />

  <meta content="2976699" name="octolytics-dimension-user_id" /><meta content="adobe-webplatform" name="octolytics-dimension-user_login" /><meta content="12143585" name="octolytics-dimension-repository_id" /><meta content="adobe-webplatform/Snap.svg" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="12143585" name="octolytics-dimension-repository_network_root_id" /><meta content="adobe-webplatform/Snap.svg" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/adobe-webplatform/Snap.svg/commits/master.atom" rel="alternate" title="Recent Commits to Snap.svg:master" type="application/atom+xml" />

  </head>


  <body class="logged_out  env-production macintosh vis-public page-blob">
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="/join">Sign up</a>
      <a class="button signin" href="/login?return_to=%2Fadobe-webplatform%2FSnap.svg%2Fblob%2Fmaster%2Fdist%2Fsnap.svg-min.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">

      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    
      data-repo="adobe-webplatform/Snap.svg"
      data-branch="master"
      data-sha="7cbbf17063ec5ab953f432c2992ad04e54fe3f78"
  >

    <input type="hidden" name="nwo" value="adobe-webplatform/Snap.svg" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>


      


          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">


  <li>
    <a href="/login?return_to=%2Fadobe-webplatform%2FSnap.svg"
    class="minibutton with-count js-toggler-target star-button tooltipped upwards"
    title="You must be signed in to use this feature" rel="nofollow">
    <span class="octicon octicon-star"></span>Star
  </a>

    <a class="social-count js-social-count" href="/adobe-webplatform/Snap.svg/stargazers">
      3,230
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Fadobe-webplatform%2FSnap.svg"
        class="minibutton with-count js-toggler-target fork-button tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/adobe-webplatform/Snap.svg/network" class="social-count">
        192
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/adobe-webplatform" class="url fn" itemprop="url" rel="author"><span itemprop="title">adobe-webplatform</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/adobe-webplatform/Snap.svg" class="js-current-repository js-repo-home-link">Snap.svg</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      

      <div class="repository-with-sidebar repo-container  ">

        <div class="repository-sidebar">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped leftwards" title="Code">
        <a href="/adobe-webplatform/Snap.svg" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /adobe-webplatform/Snap.svg">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/adobe-webplatform/Snap.svg/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /adobe-webplatform/Snap.svg/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>56</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests">
        <a href="/adobe-webplatform/Snap.svg/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /adobe-webplatform/Snap.svg/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>8</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/adobe-webplatform/Snap.svg/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /adobe-webplatform/Snap.svg/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/adobe-webplatform/Snap.svg/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /adobe-webplatform/Snap.svg/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/adobe-webplatform/Snap.svg/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /adobe-webplatform/Snap.svg/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

            <div class="only-with-full-nav">
              

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/adobe-webplatform/Snap.svg.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/adobe-webplatform/Snap.svg.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/adobe-webplatform/Snap.svg" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/adobe-webplatform/Snap.svg" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" title="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/adobe-webplatform/Snap.svg" class="minibutton sidebar-button js-conduit-rewrite-url">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


              <a href="/adobe-webplatform/Snap.svg/archive/master.zip"
                 class="minibutton sidebar-button"
                 title="Download this repository as a zip file"
                 rel="nofollow">
                <span class="octicon octicon-cloud-download"></span>
                Download ZIP
              </a>
            </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:7483440227f496230b7289d204e95b1e -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/adobe-webplatform/Snap.svg/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/adobe-webplatform/Snap.svg/blob/dev/dist/snap.svg-min.js"
                 data-name="dev"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="dev">dev</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/adobe-webplatform/Snap.svg/blob/master/dist/snap.svg-min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/adobe-webplatform/Snap.svg/tree/v0.2.0/dist/snap.svg-min.js"
                 data-name="v0.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.2.0">v0.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/adobe-webplatform/Snap.svg/tree/v0.1.0/dist/snap.svg-min.js"
                 data-name="v0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.1.0">v0.1.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/adobe-webplatform/Snap.svg" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">Snap.svg</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/adobe-webplatform/Snap.svg/tree/master/dist" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">dist</span></a></span><span class="separator"> / </span><strong class="final-path">snap.svg-min.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="dist/snap.svg-min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>



  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://0.gravatar.com/avatar/679a33ec2ceb2195591888496d287df8?d=https%3A%2F%2Fidenticons.github.com%2F1cf33fc29c5a7f169cb51d7afe381553.png&amp;r=x&amp;s=140" width="24" />
    <span class="author"><a href="/DmitryBaranovskiy" rel="author">DmitryBaranovskiy</a></span>
    <time class="js-relative-date" datetime="2013-12-22T17:27:58-08:00" title="2013-12-22 17:27:58">December 22, 2013</time>
    <div class="commit-title">
        <a href="/adobe-webplatform/Snap.svg/commit/4d9fd5ef7af71da4a301b8398a9f25cfa38396f0" class="message" data-pjax="true" title="Merge">Merge</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img height="24" src="https://0.gravatar.com/avatar/679a33ec2ceb2195591888496d287df8?d=https%3A%2F%2Fidenticons.github.com%2F1cf33fc29c5a7f169cb51d7afe381553.png&amp;r=x&amp;s=140" width="24" />
            <a href="/DmitryBaranovskiy">DmitryBaranovskiy</a>
          </li>
      </ul>
    </div>
  </div>

<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>20 lines (20 sloc)</span>
        <span>66.994 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped leftwards js-conduit-openfile-check"
               href="http://mac.github.com"
               data-url="github-mac://openRepo/https://github.com/adobe-webplatform/Snap.svg?branch=master&amp;filepath=dist%2Fsnap.svg-min.js"
               title="Open this file in GitHub for Mac"
               data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
              <a class="minibutton disabled tooltipped leftwards" href="#"
                 title="You must be signed in to make or propose changes">Edit</a>
          <a href="/adobe-webplatform/Snap.svg/raw/master/dist/snap.svg-min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/adobe-webplatform/Snap.svg/blame/master/dist/snap.svg-min.js" class="button minibutton ">Blame</a>
          <a href="/adobe-webplatform/Snap.svg/commits/master/dist/snap.svg-min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger disabled empty-icon tooltipped leftwards" href="#"
             title="You must be signed in to make or propose changes">
          Delete
        </a>
      </div><!-- /.actions -->

    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>

            </td>
            <td class="blob-line-code">
                    <div class="code-body highlight"><pre><div class='line' id='LC1'><span class="c1">// Snap.svg 0.2.0</span></div><div class='line' id='LC2'><span class="c1">// </span></div><div class='line' id='LC3'><span class="c1">// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.</span></div><div class='line' id='LC4'><span class="c1">// </span></div><div class='line' id='LC5'><span class="c1">// Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div><div class='line' id='LC6'><span class="c1">// you may not use this file except in compliance with the License.</span></div><div class='line' id='LC7'><span class="c1">// You may obtain a copy of the License at</span></div><div class='line' id='LC8'><span class="c1">// </span></div><div class='line' id='LC9'><span class="c1">// http://www.apache.org/licenses/LICENSE-2.0</span></div><div class='line' id='LC10'><span class="c1">// </span></div><div class='line' id='LC11'><span class="c1">// Unless required by applicable law or agreed to in writing, software</span></div><div class='line' id='LC12'><span class="c1">// distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div><div class='line' id='LC13'><span class="c1">// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div><div class='line' id='LC14'><span class="c1">// See the License for the specific language governing permissions and</span></div><div class='line' id='LC15'><span class="c1">// limitations under the License.</span></div><div class='line' id='LC16'><span class="c1">// </span></div><div class='line' id='LC17'><span class="c1">// build: 2013-12-23</span></div><div class='line' id='LC18'><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;0.4.2&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;hasOwnProperty&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/[\.\/]/</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;*&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">},</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="p">{}},</span><span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">listeners</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">q</span><span class="o">&gt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="s2">&quot;zIndex&quot;</span><span class="k">in</span> <span class="nx">h</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">zIndex</span><span class="p">),</span><span class="nx">h</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">zIndex</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="nx">h</span><span class="p">[</span><span class="nx">p</span><span class="p">].</span><span class="nx">zIndex</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">p</span><span class="p">]));</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span><span class="nx">l</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">l</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">]],</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">)),</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">q</span><span class="o">&gt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">p</span><span class="p">],</span><span class="s2">&quot;zIndex&quot;</span><span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">==</span><span class="nx">l</span><span class="p">[</span><span class="nx">j</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">)),</span><span class="nx">c</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">do</span> <span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">++</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">l</span><span class="p">[</span><span class="nx">j</span><span class="p">]],</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">)),</span><span class="nx">c</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span> <span class="nx">m</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">)),</span><span class="nx">c</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">k</span><span class="p">.</span><span class="nx">_events</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">listeners</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">n</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">n</span><span class="p">[</span><span class="nx">m</span><span class="p">[</span><span class="nx">e</span><span class="p">]],</span><span class="nx">n</span><span class="p">[</span><span class="nx">g</span><span class="p">]],</span><span class="nx">d</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">f</span><span class="o">||</span><span class="p">[]));</span><span class="nx">o</span><span class="o">=</span><span class="nx">l</span><span class="p">}</span><span class="k">return</span> <span class="nx">p</span><span class="p">},</span><span class="nx">k</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot;function&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">n</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]]</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]]</span><span class="o">=</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="p">{}});</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="o">||</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="o">+</span><span class="nx">a</span><span class="o">==+</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=+</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">k</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">concat</span><span class="p">([].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">)))}},</span><span class="nx">k</span><span class="p">.</span><span class="nx">stop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">},</span><span class="nx">k</span><span class="p">.</span><span class="nx">nt</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(?:\\.|\\/|^)&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;(?:\\.|\\/|$)&quot;</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">k</span><span class="p">.</span><span class="nx">nts</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">f</span><span class="p">)},</span><span class="nx">k</span><span class="p">.</span><span class="nx">off</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">unbind</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">_events</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">n</span><span class="o">:</span><span class="p">{}},</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="p">[</span><span class="nx">j</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">+=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">2</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="nx">m</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">m</span><span class="p">].</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">!=</span><span class="nx">g</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">]]</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">o</span><span class="p">[</span><span class="nx">i</span><span class="p">]]);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">](</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="nx">p</span><span class="p">.</span><span class="nx">splice</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">h</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">f</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">f</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">f</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">](</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="o">!</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">f</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">](</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">f</span><span class="p">}</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">n</span><span class="p">}},</span><span class="nx">k</span><span class="p">.</span><span class="nx">once</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">k</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;You are running Eve &quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">},</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">?</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">k</span><span class="o">:</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">?</span><span class="nx">define</span><span class="p">(</span><span class="s2">&quot;eve&quot;</span><span class="p">,[],</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">k</span><span class="p">})</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">eve</span><span class="o">=</span><span class="nx">k</span><span class="p">}(</span><span class="k">this</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="o">?</span><span class="nx">define</span><span class="p">([</span><span class="s2">&quot;eve&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)})</span><span class="o">:</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">eve</span><span class="p">)}(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">webkitRequestAnimationFrame</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">mozRequestAnimationFrame</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">oRequestAnimationFrame</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">msRequestAnimationFrame</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">16</span><span class="p">)},</span><span class="nx">e</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="o">||</span><span class="s2">&quot;[object Array]&quot;</span><span class="o">==</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;M&quot;</span><span class="o">+</span><span class="p">(</span><span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">36</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">++</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">36</span><span class="p">)},</span><span class="nx">i</span><span class="o">=</span><span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">},</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="o">-</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="o">+=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dur</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">B</span><span class="o">+=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dur</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">spd</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">spd</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)},</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">dur</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="o">*</span><span class="nx">a</span><span class="o">/</span><span class="nx">b</span><span class="p">.</span><span class="nx">dur</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">dur</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)},</span><span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">delete</span> <span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">],</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;mina.stop.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">pdif</span><span class="o">||</span><span class="p">(</span><span class="k">delete</span> <span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">pdif</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">()</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">)},</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">pdif</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">()</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">pdif</span><span class="p">,</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">pdif</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">)},</span><span class="nx">p</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">get</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">++</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">dur</span><span class="o">/</span><span class="nx">h</span><span class="p">.</span><span class="nx">spd</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">s</span><span class="o">&gt;=</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">delete</span> <span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="o">--</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;mina.finish.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">a</span><span class="p">)})}(</span><span class="nx">h</span><span class="p">)),</span><span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">start</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">start</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=+</span><span class="nx">h</span><span class="p">.</span><span class="nx">start</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">end</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">start</span><span class="p">[</span><span class="nx">j</span><span class="p">])</span><span class="o">*</span><span class="nx">h</span><span class="p">.</span><span class="nx">easing</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">s</span><span class="p">)}</span><span class="k">else</span> <span class="nx">g</span><span class="o">=+</span><span class="nx">h</span><span class="p">.</span><span class="nx">start</span><span class="o">+</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">end</span><span class="o">-</span><span class="nx">h</span><span class="p">.</span><span class="nx">start</span><span class="p">)</span><span class="o">*</span><span class="nx">h</span><span class="p">.</span><span class="nx">easing</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">s</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">p</span><span class="p">)},</span><span class="nx">q</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">h</span><span class="p">(),</span><span class="nx">start</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">end</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">dur</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">spd</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">get</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">set</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">easing</span><span class="o">:</span><span class="nx">r</span><span class="o">||</span><span class="nx">q</span><span class="p">.</span><span class="nx">linear</span><span class="p">,</span><span class="nx">status</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">speed</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">duration</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">stop</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">pause</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">resume</span><span class="o">:</span><span class="nx">o</span><span class="p">};</span><span class="nx">c</span><span class="p">[</span><span class="nx">s</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="o">++</span><span class="p">,</span><span class="mi">2</span><span class="o">==</span><span class="nx">u</span><span class="p">))</span><span class="k">break</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">p</span><span class="p">),</span><span class="nx">s</span><span class="p">};</span><span class="k">return</span> <span class="nx">q</span><span class="p">.</span><span class="nx">time</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">getById</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">},</span><span class="nx">q</span><span class="p">.</span><span class="nx">linear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">q</span><span class="p">.</span><span class="nx">easeout</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mf">1.7</span><span class="p">)},</span><span class="nx">q</span><span class="p">.</span><span class="nx">easein</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">a</span><span class="p">,.</span><span class="mi">48</span><span class="p">)},</span><span class="nx">q</span><span class="p">.</span><span class="nx">easeinout</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">.</span><span class="mi">48</span><span class="o">-</span><span class="nx">a</span><span class="o">/</span><span class="mf">1.04</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(.</span><span class="mi">1734</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">d</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">),</span><span class="nx">f</span><span class="o">=-</span><span class="nx">c</span><span class="o">-</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="p">.</span><span class="mi">5</span><span class="p">;</span><span class="k">return</span> <span class="mi">3</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="nx">h</span><span class="p">},</span><span class="nx">q</span><span class="p">.</span><span class="nx">backin</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mf">1.70158</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="o">*</span><span class="p">((</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">)},</span><span class="nx">q</span><span class="p">.</span><span class="nx">backout</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">-=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mf">1.70158</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="o">*</span><span class="p">((</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">},</span><span class="nx">q</span><span class="p">.</span><span class="nx">elastic</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">==!!</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">10</span><span class="o">*</span><span class="nx">a</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">((</span><span class="nx">a</span><span class="o">-</span><span class="p">.</span><span class="mi">075</span><span class="p">)</span><span class="o">*</span><span class="mi">2</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="p">.</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">},</span><span class="nx">q</span><span class="p">.</span><span class="nx">bounce</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mf">7.5625</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mf">2.75</span><span class="p">;</span><span class="k">return</span> <span class="mi">1</span><span class="o">/</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="o">:</span><span class="mi">2</span><span class="o">/</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">-=</span><span class="mf">1.5</span><span class="o">/</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="p">.</span><span class="mi">75</span><span class="p">)</span><span class="o">:</span><span class="mf">2.5</span><span class="o">/</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">-=</span><span class="mf">2.25</span><span class="o">/</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="p">.</span><span class="mi">9375</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">-=</span><span class="mf">2.625</span><span class="o">/</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="p">.</span><span class="mi">984375</span><span class="p">),</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">mina</span><span class="o">=</span><span class="nx">q</span><span class="p">,</span><span class="nx">q</span><span class="p">}(</span><span class="s2">&quot;undefined&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">?</span><span class="kd">function</span><span class="p">(){}</span><span class="o">:</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">)</span><span class="k">return</span> <span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">u</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;100%&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;100%&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="k">new</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="s2">&quot;xlink:&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttributeNS</span><span class="p">(</span><span class="nx">fb</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;xml:&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttributeNS</span><span class="p">(</span><span class="nx">gb</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">c</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;xlink:&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="nx">fb</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">6</span><span class="p">),</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;xml:&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="nx">gb</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">gb</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="s2">&quot;finite&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;array&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="o">||</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">&amp;&amp;</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="s2">&quot;null&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">===</span><span class="nx">a</span><span class="o">||</span><span class="nx">b</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">===</span><span class="nb">Object</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">U</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">||</span><span class="nb">Object</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">!==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]));</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">])}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;␀&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">cache</span><span class="o">||</span><span class="p">{},</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">count</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">count</span><span class="o">||</span><span class="p">[];</span><span class="k">return</span> <span class="nx">g</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">1</span><span class="nx">e3</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">shift</span><span class="p">()],</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">])}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="o">||</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="mi">180</span><span class="o">+</span><span class="mi">180</span><span class="o">*</span><span class="nx">N</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="o">-</span><span class="nx">g</span><span class="p">)</span><span class="o">/</span><span class="nx">R</span><span class="o">+</span><span class="mi">360</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">-</span><span class="nx">k</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">%</span><span class="mi">360</span><span class="o">*</span><span class="nx">R</span><span class="o">/</span><span class="mi">180</span><span class="p">}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">180</span><span class="o">*</span><span class="nx">a</span><span class="o">/</span><span class="nx">R</span><span class="o">%</span><span class="mi">360</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;[object SVGMatrix]&quot;</span><span class="o">==</span><span class="nx">U</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=+</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=+</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=+</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=+</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=+</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=+</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(?:^|\s)(\w+)\(([^)]+)\)/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s*,\s*|\s+/</span><span class="p">),</span><span class="s2">&quot;rotate&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="s2">&quot;scale&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">2</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">)),</span><span class="s2">&quot;skewX&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;m&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">tan</span><span class="p">(</span><span class="nx">l</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">])),</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">])</span><span class="o">:</span><span class="s2">&quot;skewY&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;m&quot;</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">tan</span><span class="p">(</span><span class="nx">l</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">])),</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">])</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">d</span><span class="p">)),</span><span class="nx">a</span><span class="p">}),</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">qb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nx">n</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="nx">o</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">p</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">invert</span><span class="p">()</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="s2">&quot;t&quot;</span><span class="o">==</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="mi">2</span><span class="o">==</span><span class="nx">m</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;t&quot;</span><span class="o">==</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="mi">3</span><span class="o">==</span><span class="nx">m</span><span class="o">?</span><span class="nx">p</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">x</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">y</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">x</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">j</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">y</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">d</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">i</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">j</span><span class="o">-</span><span class="nx">h</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">:</span><span class="s2">&quot;r&quot;</span><span class="o">==</span><span class="nx">o</span><span class="o">?</span><span class="mi">2</span><span class="o">==</span><span class="nx">m</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="o">||</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">rotate</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span><span class="o">:</span><span class="mi">4</span><span class="o">==</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">x</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">]),</span><span class="nx">j</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">y</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">]),</span><span class="nx">d</span><span class="p">.</span><span class="nx">rotate</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">rotate</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">]))</span><span class="o">:</span><span class="s2">&quot;s&quot;</span><span class="o">==</span><span class="nx">o</span><span class="o">?</span><span class="mi">2</span><span class="o">==</span><span class="nx">m</span><span class="o">||</span><span class="mi">3</span><span class="o">==</span><span class="nx">m</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="o">||</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span><span class="o">:</span><span class="mi">4</span><span class="o">==</span><span class="nx">m</span><span class="o">?</span><span class="nx">p</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">x</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">]),</span><span class="nx">j</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">y</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">]),</span><span class="nx">d</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">:</span><span class="mi">5</span><span class="o">==</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">x</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">4</span><span class="p">]),</span><span class="nx">j</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">y</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">4</span><span class="p">]),</span><span class="nx">d</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">scale</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">4</span><span class="p">]))</span><span class="o">:</span><span class="s2">&quot;m&quot;</span><span class="o">==</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="mi">7</span><span class="o">==</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">6</span><span class="p">])}</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;linearGradient&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;radialGradient&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;gradientTransform&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;pattern&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;patternTransform&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">),</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="k">new</span> <span class="nx">n</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">rgTransform</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">K</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\.{3}|\u2026/g</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">transform</span><span class="o">||</span><span class="nx">S</span><span class="p">)</span><span class="o">:</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">K</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">transform</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">p</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">matrix</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">someDefs</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">rb</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">ownerSVGElement</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">ownerSVGElement</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;defs&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">node</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;defs&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">).</span><span class="nx">node</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">someDefs</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">S</span><span class="o">:</span><span class="nx">a</span><span class="o">==+</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">j</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">().</span><span class="nx">width</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">S</span><span class="o">:</span><span class="nx">a</span><span class="o">==+</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">j</span><span class="p">,{</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">().</span><span class="nx">height</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">i</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;.svg---mgr&quot;</span><span class="p">);</span><span class="k">switch</span><span class="p">(</span><span class="nx">j</span><span class="o">||</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;rect&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">j</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="s2">&quot;class&quot;</span><span class="o">:</span><span class="s2">&quot;svg---mgr&quot;</span><span class="p">}),</span><span class="nx">h</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">j</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;rect&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;rx&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;ry&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;image&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">case</span><span class="s2">&quot;text&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;circle&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;cx&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;cy&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;r&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;ellipse&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;cx&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;cy&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;rx&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;ry&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;line&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;x1&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;x2&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;y1&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;y2&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;marker&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;refX&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;markerWidth&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;refY&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;markerHeight&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;radialGradient&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;fx&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;fy&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;tspan&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;dx&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;dy&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="nx">i</span><span class="p">}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">];)</span><span class="k">delete</span> <span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="o">++</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="s2">&quot;set&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">type</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">)})</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">node</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">snap</span> <span class="k">in</span> <span class="nx">hb</span><span class="p">)</span><span class="k">return</span> <span class="nx">hb</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">snap</span><span class="p">];</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">eb</span><span class="p">();</span><span class="k">try</span><span class="p">{</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerSVGElement</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">paper</span><span class="o">=</span><span class="k">new</span> <span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">anims</span><span class="o">=</span><span class="p">{},</span><span class="k">this</span><span class="p">.</span><span class="nx">_</span><span class="o">=</span><span class="p">{</span><span class="nx">transform</span><span class="o">:</span><span class="p">[]},</span><span class="nx">a</span><span class="p">.</span><span class="nx">snap</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">hb</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">y</span><span class="p">.</span><span class="nx">prototype</span><span class="p">)</span><span class="nx">y</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">e</span><span class="p">])}}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;svg&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">snap</span> <span class="k">in</span> <span class="nx">hb</span><span class="p">)</span><span class="k">return</span> <span class="nx">hb</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">snap</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;desc&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;defs&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;desc&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="s2">&quot;Created with Snap&quot;</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">)),</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;defs&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">defs</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span> <span class="k">in</span> <span class="nx">g</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="nx">c</span><span class="p">.</span><span class="nx">paper</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">root</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="k">else</span> <span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">,</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="mf">1.1</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">xmlns</span><span class="o">:</span><span class="nx">gb</span><span class="p">});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">u</span><span class="o">||</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">w</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="s2">&quot;svg&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="o">?</span><span class="k">new</span> <span class="nx">y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;stop&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;stop&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">offset</span><span class="o">:+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">};</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;stop-color&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">hex</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">opacity</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;stop-opacity&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">opacity</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;linearGradient&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;x1&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;x2&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;y1&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;y2&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">box</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">),</span><span class="nx">N</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">c</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">cx</span><span class="o">||</span><span class="p">.</span><span class="mi">5</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">cy</span><span class="o">||</span><span class="p">.</span><span class="mi">5</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">r</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">box</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">j</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">k</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">offset</span><span class="o">=+</span><span class="p">(</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">k</span><span class="p">)).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.util.grad.parse&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;l&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">?</span><span class="nx">E</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">params</span><span class="p">)</span><span class="o">:</span><span class="nx">F</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">params</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="o">!=</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">gradientUnits</span><span class="o">:</span><span class="s2">&quot;userSpaceOnUse&quot;</span><span class="p">});</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">stops</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="s2">&quot;offset&quot;</span><span class="k">in</span> <span class="nx">h</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">offset</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">offset</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">offset</span><span class="o">||</span><span class="mi">100</span><span class="p">,</span><span class="nx">d</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">offset</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;=</span><span class="nx">l</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">l</span><span class="p">];</span><span class="nx">f</span><span class="p">.</span><span class="nx">addStop</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">offset</span><span class="p">)}</span><span class="k">return</span> <span class="nx">f</span><span class="p">}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;linearGradient&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">stops</span><span class="o">=</span><span class="nx">A</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">addStop</span><span class="o">=</span><span class="nx">B</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">getBBox</span><span class="o">=</span><span class="nx">C</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">f</span><span class="p">}),</span><span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;radialGradient&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">stops</span><span class="o">=</span><span class="nx">A</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">addStop</span><span class="o">=</span><span class="nx">B</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">getBBox</span><span class="o">=</span><span class="nx">C</span><span class="p">,</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">cx</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">cy</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="nx">d</span><span class="p">}),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">fx</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">fy</span><span class="o">:</span><span class="nx">g</span><span class="p">}),</span><span class="nx">h</span><span class="p">}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">w</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;radialGradient&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">tagName</span><span class="o">||</span><span class="s2">&quot;linearGradient&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">tagName</span><span class="o">||</span><span class="s2">&quot;pattern&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">tagName</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">u</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;radialGradient&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;linearGradient&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;pattern&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">id</span><span class="o">||</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">});</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">ib</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">id</span><span class="p">)}</span><span class="k">else</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">error</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="p">);</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">id</span><span class="o">||</span><span class="nx">e</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">}),</span><span class="nx">f</span><span class="o">=</span><span class="nx">ib</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">id</span><span class="p">))</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="k">else</span> <span class="nx">f</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{};</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">S</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="mi">3</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">),</span><span class="s2">&quot;tspan&quot;</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">tagName</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="mi">3</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">nodeValue</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">f</span><span class="p">)))}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="s2">&quot;0.2.0&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Snap v&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">version</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="o">=</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="p">{</span><span class="nx">win</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">doc</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">glob</span><span class="o">=</span><span class="nx">I</span><span class="p">;</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="s2">&quot;hasOwnProperty&quot;</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nb">String</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="nb">Math</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">abs</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">pow</span><span class="p">,</span><span class="nx">N</span><span class="p">.</span><span class="nx">PI</span><span class="p">),</span><span class="nx">S</span><span class="o">=</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">round</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">T</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="sr">/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?%?)\s*\))\s*$/i</span><span class="p">,</span><span class="nx">W</span><span class="o">=</span><span class="sr">/^url\(#?([^)]+)\)$/</span><span class="p">,</span><span class="nx">X</span><span class="o">=</span><span class="s2">&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\f\r   ᠎             　\u2028\u2029&quot;</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;[,&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]+&quot;</span><span class="p">),</span><span class="nx">Z</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">),</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]*,[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]*&quot;</span><span class="p">)),</span><span class="nx">$</span><span class="o">=</span><span class="p">{</span><span class="nx">hs</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">rg</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">_</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;([a-z])[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]*,?[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]*)+)&quot;</span><span class="p">,</span><span class="s2">&quot;ig&quot;</span><span class="p">),</span><span class="nx">ab</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;([rstm])[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]*,?[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]*)+)&quot;</span><span class="p">,</span><span class="s2">&quot;ig&quot;</span><span class="p">),</span><span class="nx">bb</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]*,?[&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]*&quot;</span><span class="p">,</span><span class="s2">&quot;ig&quot;</span><span class="p">),</span><span class="nx">cb</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">db</span><span class="o">=</span><span class="s2">&quot;S&quot;</span><span class="o">+</span><span class="p">(</span><span class="o">+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">36</span><span class="p">),</span><span class="nx">eb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">db</span><span class="o">+</span><span class="p">(</span><span class="nx">cb</span><span class="o">++</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">36</span><span class="p">)},</span><span class="nx">fb</span><span class="o">=</span><span class="s2">&quot;http://www.w3.org/1999/xlink&quot;</span><span class="p">,</span><span class="nx">gb</span><span class="o">=</span><span class="s2">&quot;http://www.w3.org/2000/svg&quot;</span><span class="p">,</span><span class="nx">hb</span><span class="o">=</span><span class="p">{},</span><span class="nx">ib</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;url(&#39;#&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&#39;)&quot;</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">$</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">eb</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">format</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="sr">/\{([^\}]+)\}/g</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="sr">/(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[(&#39;|&quot;)(.+?)\2\])(\(\))?/g</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]),</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">()))}),</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">e</span><span class="o">||</span><span class="nx">e</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">K</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)})}}();</span><span class="kd">var</span> <span class="nx">jb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">)}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;position:absolute;left:-9999em;top:-9999em&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">d</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">b</span><span class="p">}}();</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">cacher</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">rad</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">deg</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">angle</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">is</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">snapTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;finite&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=+</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="o">%</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="o">-</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="o">-</span><span class="nx">e</span><span class="o">+</span><span class="nx">a</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">/=</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">/=</span><span class="nx">c</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="p">[[],[],[]],</span><span class="nx">l</span><span class="o">=</span><span class="p">[[</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">],[</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]],</span><span class="nx">m</span><span class="o">=</span><span class="p">[[</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">],[</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]];</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="p">[[</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">],[</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">],[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]]),</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="mi">3</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="o">+=</span><span class="nx">l</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="nx">i</span><span class="p">]</span><span class="o">*</span><span class="nx">m</span><span class="p">[</span><span class="nx">i</span><span class="p">][</span><span class="nx">h</span><span class="p">];</span><span class="nx">k</span><span class="p">[</span><span class="nx">g</span><span class="p">][</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">2</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">2</span><span class="p">],</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">invert</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="k">new</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">/</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">/</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">/</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">/</span><span class="nx">b</span><span class="p">,(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">d</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">)</span><span class="o">/</span><span class="nx">b</span><span class="p">,(</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">)</span><span class="o">/</span><span class="nx">b</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">),(</span><span class="nx">c</span><span class="o">||</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">),(</span><span class="nx">c</span><span class="o">||</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="o">-</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=+</span><span class="nx">N</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">),</span><span class="nx">e</span><span class="o">=+</span><span class="nx">N</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">+</span><span class="k">this</span><span class="p">[</span><span class="nx">K</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">(</span><span class="mi">97</span><span class="o">+</span><span class="nx">a</span><span class="p">)].</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;matrix(&quot;</span><span class="o">+</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">3</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">5</span><span class="p">)].</span><span class="nx">join</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">)]},</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="p">.</span><span class="nx">dx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dy</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">f</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[[</span><span class="k">this</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">c</span><span class="p">],[</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="p">]];</span><span class="nx">a</span><span class="p">.</span><span class="nx">scalex</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">])),</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">a</span><span class="p">.</span><span class="nx">shear</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">shear</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">shear</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">scaley</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">])),</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">a</span><span class="p">.</span><span class="nx">shear</span><span class="o">/=</span><span class="nx">a</span><span class="p">.</span><span class="nx">scaley</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=-</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">];</span><span class="k">return</span> <span class="mi">0</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">acos</span><span class="p">(</span><span class="nx">f</span><span class="p">)),</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="o">=</span><span class="mi">360</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">asin</span><span class="p">(</span><span class="nx">e</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">isSimple</span><span class="o">=!</span><span class="p">(</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">shear</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">scalex</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">scaley</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">isSuperSimple</span><span class="o">=!+</span><span class="nx">a</span><span class="p">.</span><span class="nx">shear</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">scalex</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">scaley</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">noRotation</span><span class="o">=!+</span><span class="nx">a</span><span class="p">.</span><span class="nx">shear</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotate</span><span class="p">,</span><span class="nx">a</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">toTransformString</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">split</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">isSimple</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">scalex</span><span class="o">=+</span><span class="nx">b</span><span class="p">.</span><span class="nx">scalex</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">scaley</span><span class="o">=+</span><span class="nx">b</span><span class="p">.</span><span class="nx">scaley</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotate</span><span class="o">=+</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotate</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">),(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dx</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">dy</span><span class="o">?</span><span class="s2">&quot;t&quot;</span><span class="o">+</span><span class="p">[</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">dx</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">dy</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">)]</span><span class="o">:</span><span class="nx">S</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="mi">1</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">scalex</span><span class="o">||</span><span class="mi">1</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">scaley</span><span class="o">?</span><span class="s2">&quot;s&quot;</span><span class="o">+</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">scalex</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">scaley</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">S</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotate</span><span class="o">?</span><span class="s2">&quot;r&quot;</span><span class="o">+</span><span class="p">[</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotate</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">S</span><span class="p">))</span><span class="o">:</span><span class="s2">&quot;m&quot;</span><span class="o">+</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">3</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">5</span><span class="p">)]}}(</span><span class="nx">n</span><span class="p">.</span><span class="nx">prototype</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">Matrix</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">getRGB</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">)).</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span><span class="p">{</span><span class="nx">r</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">hex</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">toString</span><span class="o">:</span><span class="nx">nb</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;none&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="p">{</span><span class="nx">r</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">hex</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">toString</span><span class="o">:</span><span class="nx">nb</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">$</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span><span class="o">||</span><span class="s2">&quot;#&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">())</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="p">{</span><span class="nx">r</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">hex</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">toString</span><span class="o">:</span><span class="nx">nb</span><span class="p">};</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">V</span><span class="p">);</span><span class="k">return</span> <span class="nx">j</span><span class="o">?</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">5</span><span class="p">),</span><span class="mi">16</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">),</span><span class="mi">16</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="mi">16</span><span class="p">)),</span><span class="nx">j</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">M</span><span class="p">((</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">3</span><span class="p">))</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="mi">16</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">M</span><span class="p">((</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="mi">16</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">M</span><span class="p">((</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="mi">16</span><span class="p">)),</span><span class="nx">j</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">4</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="nx">Z</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">*=</span><span class="mf">2.55</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">*=</span><span class="mf">2.55</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">*=</span><span class="mf">2.55</span><span class="p">),</span><span class="s2">&quot;rgba&quot;</span><span class="o">==</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">])),</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">/=</span><span class="mi">100</span><span class="p">)),</span><span class="nx">j</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">5</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="nx">Z</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">/=</span><span class="mi">100</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">/=</span><span class="mi">100</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">/=</span><span class="mi">100</span><span class="p">),(</span><span class="s2">&quot;deg&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;°&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">/=</span><span class="mi">360</span><span class="p">),</span><span class="s2">&quot;hsba&quot;</span><span class="o">==</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">])),</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">/=</span><span class="mi">100</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">hsb2rgb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="nx">j</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="mi">6</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="nx">Z</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">/=</span><span class="mi">100</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">/=</span><span class="mi">100</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">/=</span><span class="mi">100</span><span class="p">),(</span><span class="s2">&quot;deg&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">3</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;°&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">/=</span><span class="mi">360</span><span class="p">),</span><span class="s2">&quot;hsla&quot;</span><span class="o">==</span><span class="nx">j</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">L</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">])),</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;%&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">/=</span><span class="mi">100</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">hsl2rgb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="mi">255</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="mi">255</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="mi">255</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">O</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="mi">1</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">r</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">toString</span><span class="o">:</span><span class="nx">nb</span><span class="p">},</span><span class="nx">j</span><span class="p">.</span><span class="nx">hex</span><span class="o">=</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">16777216</span><span class="o">|</span><span class="nx">e</span><span class="o">|</span><span class="nx">c</span><span class="o">&lt;&lt;</span><span class="mi">8</span><span class="o">|</span><span class="nx">b</span><span class="o">&lt;&lt;</span><span class="mi">16</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;finite&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">j</span><span class="p">))</span><span class="o">:</span><span class="p">{</span><span class="nx">r</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">hex</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">toString</span><span class="o">:</span><span class="nx">nb</span><span class="p">}},</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">hsb</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">hsb2rgb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">).</span><span class="nx">hex</span><span class="p">}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">hsl</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">hsl2rgb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">).</span><span class="nx">hex</span><span class="p">}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgb</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;finite&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">round</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;rgba(&quot;</span><span class="o">+</span><span class="p">[</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)]</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">16777216</span><span class="o">|</span><span class="nx">c</span><span class="o">|</span><span class="nx">b</span><span class="o">&lt;&lt;</span><span class="mi">8</span><span class="o">|</span><span class="nx">a</span><span class="o">&lt;&lt;</span><span class="mi">16</span><span class="p">).</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">kb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;rgb(255, 0, 0)&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">kb</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;red&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())</span><span class="k">return</span> <span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">S</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="s2">&quot;color&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">d</span><span class="p">}),</span><span class="nx">kb</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">lb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;hsb(&quot;</span><span class="o">+</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">},</span><span class="nx">mb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;hsl(&quot;</span><span class="o">+</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">l</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">},</span><span class="nx">nb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">opacity</span><span class="o">||</span><span class="kc">null</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">opacity</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">hex</span><span class="o">:</span><span class="s2">&quot;rgba(&quot;</span><span class="o">+</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">opacity</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">},</span><span class="nx">ob</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;r&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;g&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;b&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">string</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getRGB</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">/=</span><span class="mi">255</span><span class="p">,</span><span class="nx">b</span><span class="o">/=</span><span class="mi">255</span><span class="p">,</span><span class="nx">c</span><span class="o">/=</span><span class="mi">255</span><span class="p">),[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">]},</span><span class="nx">pb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">255</span><span class="o">*</span><span class="nx">c</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">r</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;finite&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">hex</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">toString</span><span class="o">:</span><span class="nx">nb</span><span class="p">};</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;finite&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="nx">e</span><span class="p">),</span><span class="nx">g</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;h&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;s&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;b&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">hsb2rgb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">hex</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hex</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;h&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;s&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;l&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">hsl2rgb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">hex</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hex</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getRGB</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;r&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;g&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;b&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="s2">&quot;error&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgb2hsl</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgb2hsb</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">hex</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">v</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="o">=</span><span class="mi">1</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">nb</span><span class="p">,</span><span class="nx">a</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">hsb2rgb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;h&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;s&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;b&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">o</span><span class="p">),</span><span class="nx">a</span><span class="o">*=</span><span class="mi">360</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">%</span><span class="mi">360</span><span class="o">/</span><span class="mi">60</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="o">%</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">j</span><span class="p">,</span><span class="nx">a</span><span class="o">=~~</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">+=</span><span class="p">[</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">][</span><span class="nx">a</span><span class="p">],</span><span class="nx">g</span><span class="o">+=</span><span class="p">[</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">][</span><span class="nx">a</span><span class="p">],</span><span class="nx">h</span><span class="o">+=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="p">][</span><span class="nx">a</span><span class="p">],</span><span class="nx">pb</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">hsl2rgb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;h&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;s&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;l&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">l</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">h</span><span class="p">),(</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">/=</span><span class="mi">360</span><span class="p">,</span><span class="nx">b</span><span class="o">/=</span><span class="mi">100</span><span class="p">,</span><span class="nx">c</span><span class="o">/=</span><span class="mi">100</span><span class="p">),</span><span class="nx">a</span><span class="o">*=</span><span class="mi">360</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">%</span><span class="mi">360</span><span class="o">/</span><span class="mi">60</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="o">*</span><span class="p">(.</span><span class="mi">5</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="mi">1</span><span class="o">-</span><span class="nx">c</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="o">%</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">j</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="o">=~~</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">+=</span><span class="p">[</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">][</span><span class="nx">a</span><span class="p">],</span><span class="nx">g</span><span class="o">+=</span><span class="p">[</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">][</span><span class="nx">a</span><span class="p">],</span><span class="nx">h</span><span class="o">+=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="p">][</span><span class="nx">a</span><span class="p">],</span><span class="nx">pb</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgb2hsb</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">ob</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">f</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="nx">g</span><span class="o">:</span><span class="nx">f</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="nx">g</span><span class="o">+</span><span class="mi">2</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="nx">g</span><span class="o">+</span><span class="mi">4</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">60</span><span class="o">*</span><span class="p">((</span><span class="nx">d</span><span class="o">+</span><span class="mi">360</span><span class="p">)</span><span class="o">%</span><span class="mi">6</span><span class="p">)</span><span class="o">/</span><span class="mi">360</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">g</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">g</span><span class="o">/</span><span class="nx">f</span><span class="p">,{</span><span class="nx">h</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">s</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">toString</span><span class="o">:</span><span class="nx">lb</span><span class="p">}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">rgb2hsl</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">ob</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">P</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">i</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">g</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="nx">i</span><span class="o">:</span><span class="nx">g</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="nx">i</span><span class="o">+</span><span class="mi">2</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="nx">i</span><span class="o">+</span><span class="mi">4</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">60</span><span class="o">*</span><span class="p">((</span><span class="nx">d</span><span class="o">+</span><span class="mi">360</span><span class="p">)</span><span class="o">%</span><span class="mi">6</span><span class="p">)</span><span class="o">/</span><span class="mi">360</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="nx">h</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="o">==</span><span class="nx">i</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">i</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="o">/</span><span class="p">(</span><span class="mi">2</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="p">),{</span><span class="nx">h</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">s</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">toString</span><span class="o">:</span><span class="nx">mb</span><span class="p">}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">parsePathString</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">arr</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">arr</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">a</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">c</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">o</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">m</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">q</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">s</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">t</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">v</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">z</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">_</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">bb</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="o">+</span><span class="nx">b</span><span class="p">)}),</span><span class="s2">&quot;m&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">))),</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;m&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;l&quot;</span><span class="o">:</span><span class="s2">&quot;L&quot;</span><span class="p">),</span><span class="s2">&quot;o&quot;</span><span class="o">==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]]),</span><span class="s2">&quot;r&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">f</span><span class="p">));</span><span class="k">else</span> <span class="k">for</span><span class="p">(;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">b</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">]))),</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">]););}),</span><span class="nx">e</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">arr</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">e</span><span class="p">};</span><span class="kd">var</span> <span class="nx">qb</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parseTransformString</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">clone</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">ab</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">bb</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="o">+</span><span class="nx">b</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="nx">c</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">e</span><span class="p">))}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">b</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">svgTransform2string</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">rgTransform</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^[a-z][&quot;</span><span class="o">+</span><span class="nx">X</span><span class="o">+</span><span class="s2">&quot;]*-?\\.?\\d&quot;</span><span class="p">,</span><span class="s2">&quot;i&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">transform2matrix</span><span class="o">=</span><span class="nx">p</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">_unit2px</span><span class="o">=</span><span class="nx">s</span><span class="p">;</span><span class="kd">var</span> <span class="nx">rb</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">contains</span><span class="o">||</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">9</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentElement</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="nx">d</span><span class="o">||!</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="o">||</span><span class="mi">1</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">||!</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="o">&amp;&amp;</span><span class="mi">16</span><span class="o">&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">d</span><span class="p">)))}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">b</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">getSomeDefs</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">d</span><span class="p">.</span><span class="nx">selectAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">set</span><span class="o">||</span><span class="nb">Array</span><span class="p">)(),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">z</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]));</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;#&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">charAt</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="p">[]).</span><span class="nx">concat</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">ib</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">d</span><span class="p">)})))}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;xlink:href&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;#&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">charAt</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">[]).</span><span class="nx">concat</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;xlink:href&quot;</span><span class="p">,</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">)})))}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;*&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="sr">/^\s*url\((&quot;|&#39;|)(.*)\1\)\s*$/</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;fill&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;stroke&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;filter&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;mask&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;clip-path&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;id&quot;</span><span class="p">);</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="p">}),</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">old</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="p">}))}</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">h</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">old</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="p">[</span><span class="nx">n</span><span class="p">](</span><span class="nx">h</span><span class="p">[</span><span class="nx">j</span><span class="p">].</span><span class="nx">id</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;&lt;&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">attributes</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39;=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">value</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&quot;/g</span><span class="p">,</span><span class="s1">&#39;\\&quot;&#39;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot;&gt;&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="mi">3</span><span class="o">==</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">?</span><span class="nx">b</span><span class="o">+=</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">nodeValue</span><span class="o">:</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">z</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]).</span><span class="nx">toString</span><span class="p">());</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot;&lt;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot;&gt;&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="s2">&quot;/&gt;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}}</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">))</span><span class="k">return</span> <span class="nx">v</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">));</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBBox</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;use&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">original</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">removed</span><span class="p">)</span><span class="k">return</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">_</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bboxwt</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">get</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">realPath</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">get</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">](</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">box</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">()),</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">box</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bboxwt</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">realPath</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">get</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">]</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">get</span><span class="p">.</span><span class="nx">deflt</span><span class="p">)(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bbox</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">realPath</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">matrix</span><span class="p">)),</span><span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">box</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bbox</span><span class="p">))};</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">string</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">transform</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getCTM</span><span class="p">()),</span><span class="nx">d</span><span class="o">=</span><span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toTransformString</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">==</span><span class="nx">K</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">matrix</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">transform</span><span class="o">:</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">string</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">globalMatrix</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">localMatrix</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">diffMatrix</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">clone</span><span class="p">().</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">invert</span><span class="p">()),</span><span class="nx">global</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">toTransformString</span><span class="p">(),</span><span class="nx">local</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">toString</span><span class="o">:</span><span class="nx">j</span><span class="p">}}</span><span class="k">return</span> <span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toTransformString</span><span class="p">()),</span><span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;linearGradient&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;radialGradient&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">gradientTransform</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">matrix</span><span class="p">})</span><span class="o">:</span><span class="s2">&quot;pattern&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">patternTransform</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">matrix</span><span class="p">})</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">transform</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">matrix</span><span class="p">})),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">append</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;set&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="k">this</span><span class="p">}</span><span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">paper</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">paper</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="k">this</span><span class="p">)),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">prepend</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">paper</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">paper</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">add</span><span class="p">(),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">()}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">prependTo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">before</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;set&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="p">()}),</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">add</span><span class="p">(),</span><span class="k">this</span><span class="p">}</span><span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">add</span><span class="p">(),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">paper</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">paper</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">after</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">nextSibling</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">add</span><span class="p">(),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">paper</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">paper</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertBefore</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">paper</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">paper</span><span class="p">,</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">add</span><span class="p">(),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertAfter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">paper</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">paper</span><span class="p">,</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">add</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">add</span><span class="p">(),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">paper</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">removed</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">add</span><span class="p">(),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">querySelector</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">set</span><span class="o">||</span><span class="nb">Array</span><span class="p">)(),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">z</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]));</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">asPX</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="o">+</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">use</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">b</span><span class="p">})),</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;linearGradient&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;radialGradient&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;pattern&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">)</span><span class="o">:</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;use&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="s2">&quot;xlink:href&quot;</span><span class="o">:</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">original</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">));</span><span class="k">return</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;id&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">}),</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertAfter</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">a</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">toDefs</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">pattern</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;pattern&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">()),</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;x&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">patternUnits</span><span class="o">:</span><span class="s2">&quot;userSpaceOnUse&quot;</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">viewBox</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="nx">g</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">marker</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;marker&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">()),</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;x&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">refX</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">cx</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">refY</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">cy</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">viewBox</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="nx">T</span><span class="p">),</span><span class="nx">markerWidth</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">markerHeight</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">orient</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span><span class="nx">refX</span><span class="o">:</span><span class="nx">g</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">refY</span><span class="o">:</span><span class="nx">h</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">id</span><span class="p">}),</span><span class="nx">i</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="nx">i</span><span class="p">};</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="s2">&quot;function&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">linear</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">dur</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">easing</span><span class="o">=</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">callback</span><span class="o">=</span><span class="nx">e</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">animation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">inAnim</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">anims</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">anims</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">anim</span><span class="o">:</span><span class="k">new</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_attrs</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dur</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_callback</span><span class="p">),</span><span class="nx">curStatus</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">status</span><span class="p">(),</span><span class="nx">status</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">stop</span><span class="p">()}})}(</span><span class="nx">a</span><span class="p">.</span><span class="nx">anims</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">animate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="s2">&quot;function&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">g</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">linear</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">time</span><span class="p">(),</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">i</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">time</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">return</span> <span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="s2">&quot;mina.finish.&quot;</span><span class="o">+</span><span class="nx">j</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">j</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">stop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">inAnim</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">stop</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">animate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="s2">&quot;function&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">linear</span><span class="p">),</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">callback</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">dur</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">);</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="p">{},</span><span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">r</span><span class="p">)){</span><span class="nx">q</span><span class="p">.</span><span class="nx">equal</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">equal</span><span class="p">(</span><span class="nx">r</span><span class="p">,</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">])),</span><span class="nx">i</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">to</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">i</span><span class="o">=+</span><span class="nx">q</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">j</span><span class="o">=+</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">p</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="nx">l</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">j</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">time</span><span class="p">(),</span><span class="nx">u</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">time</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">p</span><span class="p">)</span><span class="nx">p</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">a</span><span class="p">));</span><span class="nx">q</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">q</span><span class="p">.</span><span class="nx">anims</span><span class="p">[</span><span class="nx">u</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">u</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">_attrs</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">u</span><span class="p">.</span><span class="nx">_callback</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="s2">&quot;mina.finish.&quot;</span><span class="o">+</span><span class="nx">u</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">delete</span> <span class="nx">q</span><span class="p">.</span><span class="nx">anims</span><span class="p">[</span><span class="nx">u</span><span class="p">.</span><span class="nx">id</span><span class="p">],</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">q</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="s2">&quot;mina.stop.&quot;</span><span class="o">+</span><span class="nx">u</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">delete</span> <span class="nx">q</span><span class="p">.</span><span class="nx">anims</span><span class="p">[</span><span class="nx">u</span><span class="p">.</span><span class="nx">id</span><span class="p">]}),</span><span class="nx">q</span><span class="p">};</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.data.get.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kc">null</span><span class="p">),</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">1</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.data.get.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="k">return</span> <span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.data.set.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeData</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">=</span><span class="p">{}</span><span class="o">:</span><span class="nx">l</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">l</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">][</span><span class="nx">a</span><span class="p">],</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">outerSVG</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">i</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerSVG</span><span class="o">=</span><span class="nx">i</span><span class="p">()}(</span><span class="nx">u</span><span class="p">.</span><span class="nx">prototype</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">parse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^\s*&lt;\s*svg(?:\s|&gt;)/</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&lt;svg&gt;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;&lt;/svg&gt;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">S</span><span class="p">,</span><span class="k">new</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">select</span><span class="p">,</span><span class="nx">w</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">selectAll</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fragment</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">f</span><span class="p">.</span><span class="nx">node</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeType</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">node</span><span class="p">)}</span><span class="k">return</span> <span class="k">new</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">el</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">rect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;x&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="kc">null</span><span class="o">!=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">rx</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">ry</span><span class="o">=</span><span class="nx">g</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">(</span><span class="s2">&quot;rect&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">circle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;cx&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">cx</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">cy</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="nx">c</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">el</span><span class="p">(</span><span class="s2">&quot;circle&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">image</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;image&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;src&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;xlink:href&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">preserveAspectRatio</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">};</span><span class="kc">null</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="p">),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!=</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">jb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">})}),</span><span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">i</span><span class="p">)}</span><span class="k">return</span> <span class="nx">h</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">ellipse</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;ellipse&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span></div><div class='line' id='LC19'><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;cx&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">cx</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">cy</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">rx</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">ry</span><span class="o">:</span><span class="nx">d</span><span class="p">}),</span><span class="nx">e</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;path&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">a</span><span class="p">}),</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">group</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">)),</span><span class="nx">c</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">}),</span><span class="nx">d</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">line</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">x1</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">d</span><span class="p">}),</span><span class="nx">e</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">polyline</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;polyline&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">points</span><span class="o">:</span><span class="nx">a</span><span class="p">}),</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">polygon</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;polygon&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">points</span><span class="o">:</span><span class="nx">a</span><span class="p">}),</span><span class="nx">b</span><span class="p">},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">gradient</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">defs</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">gradientLinear</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">defs</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">gradientRadial</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">defs</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">,{</span><span class="nx">xmlns</span><span class="o">:</span><span class="nx">gb</span><span class="p">}),</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">),</span><span class="nx">a</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span><span class="nx">b</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">,</span><span class="s2">&quot;defs&quot;</span><span class="o">!=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tagName</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">}}()}(</span><span class="nx">y</span><span class="p">.</span><span class="nx">prototype</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">ajax</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">eb</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;function&quot;</span><span class="p">))</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;=&quot;</span><span class="o">+</span><span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">]));</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&amp;&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;POST&quot;</span><span class="o">:</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;X-Requested-With&quot;</span><span class="p">,</span><span class="s2">&quot;XMLHttpRequest&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">setRequestHeader</span><span class="p">(</span><span class="s2">&quot;Content-type&quot;</span><span class="p">,</span><span class="s2">&quot;application/x-www-form-urlencoded&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="s2">&quot;snap.ajax.&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;.0&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="s2">&quot;snap.ajax.&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;.200&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="s2">&quot;snap.ajax.&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;.304&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">)),</span><span class="nx">g</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="mi">4</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">readyState</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.ajax.&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">status</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="mi">4</span><span class="o">==</span><span class="nx">g</span><span class="p">.</span><span class="nx">readyState</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">g</span><span class="p">)}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">load</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">responseText</span><span class="p">);</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">)})},</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.mask&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">u</span><span class="o">||</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">w</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">w</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="s2">&quot;mask&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;mask&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">id</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">});</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">mask</span><span class="o">:</span><span class="nx">ib</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">)})}}),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.clip&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.clip-path&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.clipPath&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)}(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">u</span><span class="o">||</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">w</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="s2">&quot;clipPath&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="s2">&quot;clipPath&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">id</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">});</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="s2">&quot;clip-path&quot;</span><span class="o">:</span><span class="nx">ib</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">)})}}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.fill&quot;</span><span class="p">,</span><span class="nx">G</span><span class="p">(</span><span class="s2">&quot;fill&quot;</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.stroke&quot;</span><span class="p">,</span><span class="nx">G</span><span class="p">(</span><span class="s2">&quot;stroke&quot;</span><span class="p">));</span><span class="kd">var</span> <span class="nx">sb</span><span class="o">=</span><span class="sr">/^([lr])(?:\(([^)]*)\))?(.*)$/i</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.grad.parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">sb</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">return</span> <span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s*,\s*/</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">+</span><span class="nx">a</span><span class="o">==</span><span class="nx">a</span><span class="o">?+</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="p">}),</span><span class="mi">1</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">==</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">[]),</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]};</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">b</span><span class="p">}),{</span><span class="nx">type</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">stops</span><span class="o">:</span><span class="nx">e</span><span class="p">}}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.d&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/[ruo]/i</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toAbsolute</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">d</span><span class="o">:</span><span class="nx">a</span><span class="p">})})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.#text&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">)})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.path&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">a</span><span class="p">})})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.viewBox&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;x&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">?</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">viewBox</span><span class="o">:</span><span class="nx">c</span><span class="p">}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">()})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.transform&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">()})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.r&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;rect&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">rx</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">ry</span><span class="o">:</span><span class="nx">a</span><span class="p">}))})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.textpath&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="s2">&quot;text&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">textPath</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textPath</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">textPath</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">).</span><span class="nx">path</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="nx">c</span><span class="p">})}</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">u</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="nx">c</span><span class="p">})));</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textPath</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="s2">&quot;xlink:href&quot;</span><span class="o">:</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">});</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;textPath&quot;</span><span class="p">,{</span><span class="s2">&quot;xlink:href&quot;</span><span class="o">:</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">});</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">textPath</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">d</span><span class="p">)}}})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.text&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;tspan&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]));</span><span class="k">else</span> <span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">normalize</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">normalize</span><span class="p">(),</span><span class="nx">b</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">()})(</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">tb</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;alignment-baseline&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;baseline-shift&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">clip</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;clip-path&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;clip-rule&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;color-interpolation&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;color-interpolation-filters&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;color-profile&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;color-rendering&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">direction</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;dominant-baseline&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;enable-background&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;fill-opacity&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;fill-rule&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">filter</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;flood-color&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;flood-opacity&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">font</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;font-family&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;font-size&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;font-size-adjust&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;font-stretch&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;font-style&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;font-variant&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;font-weight&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;glyph-orientation-horizontal&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;glyph-orientation-vertical&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;image-rendering&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">kerning</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;letter-spacing&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;lighting-color&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">marker</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;marker-end&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;marker-mid&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;marker-start&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">mask</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">overflow</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;pointer-events&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;shape-rendering&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;stop-color&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;stop-opacity&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">stroke</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;stroke-dasharray&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;stroke-dashoffset&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;stroke-linecap&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;stroke-linejoin&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;stroke-miterlimit&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;stroke-opacity&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;text-anchor&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;text-decoration&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;text-rendering&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;unicode-bidi&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;word-spacing&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;writing-mode&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">nt</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-(\w)/gi</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()}),</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[A-Z]/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()});</span><span class="nx">tb</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">S</span><span class="o">:</span><span class="nx">a</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">d</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.transform&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">()})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.textpath&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">textPath</span><span class="p">})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="s2">&quot;marker-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;none&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">W</span><span class="p">)[</span><span class="mi">1</span><span class="p">]))}}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot;marker&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">==</span><span class="nx">c</span><span class="o">||!</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;marker&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="o">||</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">ib</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">}}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.marker-end&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;end&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.markerEnd&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;end&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.marker-start&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;start&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.markerStart&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;start&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.marker-mid&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;mid&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.markerMid&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;mid&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.marker-end&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;end&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.markerEnd&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;end&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.marker-start&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;start&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.markerStart&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;start&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.marker-mid&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;mid&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.markerMid&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="s2">&quot;mid&quot;</span><span class="p">))(</span><span class="o">-</span><span class="mi">1</span><span class="p">)}(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.r&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;rect&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;rx&quot;</span><span class="p">)</span><span class="o">==</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;ry&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;rx&quot;</span><span class="p">))</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.text&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="s2">&quot;tspan&quot;</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">H</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">);</span><span class="k">return</span> <span class="mi">1</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">}})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.#text&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">textContent</span><span class="p">})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.viewBox&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;viewBox&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="nx">Y</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">box</span><span class="p">(</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">])})(</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.points&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;points&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">Y</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.path&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;d&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="nx">a</span><span class="p">}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">nt</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[A-Z]/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()});</span><span class="k">return</span> <span class="nx">tb</span><span class="p">[</span><span class="nx">J</span><span class="p">](</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">ub</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ownerDocument</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">win</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">)</span><span class="o">-</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">win</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">)</span><span class="o">-</span><span class="nx">h</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">y</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">j</span><span class="p">}};</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">getElementByPoint</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">canvas</span><span class="p">,</span><span class="nx">I</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">elementFromPoint</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">win</span><span class="p">.</span><span class="nx">opera</span><span class="o">&amp;&amp;</span><span class="s2">&quot;svg&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">tagName</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">ub</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createSVGRect</span><span class="p">();</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getIntersectionList</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">])}</span><span class="k">return</span> <span class="nx">d</span><span class="o">?</span><span class="nx">z</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">plugin</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">I</span><span class="p">)},</span><span class="nx">I</span><span class="p">.</span><span class="nx">win</span><span class="p">.</span><span class="nx">Snap</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="p">}();</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">plugin</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">ps</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">ps</span><span class="o">||</span><span class="p">{};</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">sleep</span><span class="o">=</span><span class="mi">100</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">sleep</span><span class="o">:</span><span class="mi">100</span><span class="p">},</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">L</span><span class="p">](</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">sleep</span><span class="o">--</span><span class="p">,</span><span class="o">!</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">sleep</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])}),</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">),{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">w</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">cx</span><span class="o">:</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">cy</span><span class="o">:</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">r1</span><span class="o">:</span><span class="nx">O</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">r2</span><span class="o">:</span><span class="nx">O</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">r0</span><span class="o">:</span><span class="nx">O</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">c</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="o">*</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">path</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">vb</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">j</span><span class="o">?</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">j</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">+</span><span class="p">(</span><span class="o">+</span><span class="nx">a</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">cacher</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="nx">a</span> <span class="k">instanceof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">{},</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="s2">&quot;M&quot;</span><span class="o">==</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="nx">j</span><span class="o">=+</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="o">=+</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">6</span><span class="p">]),</span><span class="nx">q</span><span class="o">+</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;!</span><span class="nx">p</span><span class="p">.</span><span class="nx">start</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">f</span><span class="o">-</span><span class="nx">q</span><span class="p">),</span><span class="nx">o</span><span class="o">+=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">start</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">start</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">y</span><span class="p">)],</span><span class="nx">h</span><span class="p">)</span><span class="k">return</span> <span class="nx">o</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;C&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">n</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">n</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">end</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">end</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">5</span><span class="p">]),</span><span class="nx">e</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="mi">6</span><span class="p">])].</span><span class="nx">join</span><span class="p">(),</span><span class="nx">q</span><span class="o">+=</span><span class="nx">m</span><span class="p">,</span><span class="nx">j</span><span class="o">=+</span><span class="nx">l</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">k</span><span class="o">=+</span><span class="nx">l</span><span class="p">[</span><span class="mi">6</span><span class="p">];</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span> <span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">f</span><span class="o">-</span><span class="nx">q</span><span class="p">)}</span><span class="nx">q</span><span class="o">+=</span><span class="nx">m</span><span class="p">,</span><span class="nx">j</span><span class="o">=+</span><span class="nx">l</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">k</span><span class="o">=+</span><span class="nx">l</span><span class="p">[</span><span class="mi">6</span><span class="p">]}</span><span class="nx">o</span><span class="o">+=</span><span class="nx">l</span><span class="p">.</span><span class="nx">shift</span><span class="p">()</span><span class="o">+</span><span class="nx">l</span><span class="p">}</span><span class="k">return</span> <span class="nx">p</span><span class="p">.</span><span class="nx">end</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">q</span><span class="o">:</span><span class="nx">d</span><span class="o">?</span><span class="nx">p</span><span class="o">:</span><span class="nx">i</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">l</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="mi">1</span><span class="p">)},</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">clone</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">1</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">n</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">l</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">n</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="o">*</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">b</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">c</span><span class="p">),</span><span class="nx">t</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="nx">m</span><span class="o">*</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">d</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="mi">90</span><span class="o">-</span><span class="mi">180</span><span class="o">*</span><span class="nx">O</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="nx">q</span><span class="o">-</span><span class="nx">s</span><span class="p">,</span><span class="nx">r</span><span class="o">-</span><span class="nx">t</span><span class="p">)</span><span class="o">/</span><span class="nx">P</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="nx">m</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">r</span><span class="p">},</span><span class="nx">n</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">t</span><span class="p">},</span><span class="nx">start</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">v</span><span class="p">},</span><span class="nx">end</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">w</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">x</span><span class="p">},</span><span class="nx">alpha</span><span class="o">:</span><span class="nx">y</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">k</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">k</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">y</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span><span class="o">||</span><span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span><span class="o">||</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span><span class="o">||</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">x2</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y2</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">x2</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">x2</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">y2</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">y2</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=-</span><span class="mi">3</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">9</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="mi">9</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="nx">b</span><span class="o">-</span><span class="mi">12</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">*</span><span class="nx">g</span><span class="o">-</span><span class="mi">3</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kc">null</span><span class="o">==</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">i</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">i</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">12</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">[</span><span class="o">-</span><span class="p">.</span><span class="mi">1252</span><span class="p">,.</span><span class="mi">1252</span><span class="p">,</span><span class="o">-</span><span class="p">.</span><span class="mi">3678</span><span class="p">,.</span><span class="mi">3678</span><span class="p">,</span><span class="o">-</span><span class="p">.</span><span class="mi">5873</span><span class="p">,.</span><span class="mi">5873</span><span class="p">,</span><span class="o">-</span><span class="p">.</span><span class="mi">7699</span><span class="p">,.</span><span class="mi">7699</span><span class="p">,</span><span class="o">-</span><span class="p">.</span><span class="mi">9041</span><span class="p">,.</span><span class="mi">9041</span><span class="p">,</span><span class="o">-</span><span class="p">.</span><span class="mi">9816</span><span class="p">,.</span><span class="mi">9816</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="p">[.</span><span class="mi">2491</span><span class="p">,.</span><span class="mi">2491</span><span class="p">,.</span><span class="mi">2335</span><span class="p">,.</span><span class="mi">2335</span><span class="p">,.</span><span class="mi">2032</span><span class="p">,.</span><span class="mi">2032</span><span class="p">,.</span><span class="mi">1601</span><span class="p">,.</span><span class="mi">1601</span><span class="p">,.</span><span class="mi">1069</span><span class="p">,.</span><span class="mi">1069</span><span class="p">,.</span><span class="mi">0472</span><span class="p">,.</span><span class="mi">0472</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="nx">l</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">+</span><span class="nx">j</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="o">*</span><span class="nx">r</span><span class="o">+</span><span class="nx">s</span><span class="o">*</span><span class="nx">s</span><span class="p">;</span><span class="nx">o</span><span class="o">+=</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">*</span><span class="nx">O</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">t</span><span class="p">)}</span><span class="k">return</span> <span class="nx">j</span><span class="o">*</span><span class="nx">o</span><span class="p">}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">i</span><span class="o">||</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">k</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="o">-</span><span class="nx">l</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="p">.</span><span class="mi">01</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">T</span><span class="p">(</span><span class="nx">j</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">o</span><span class="p">;)</span><span class="nx">l</span><span class="o">/=</span><span class="mi">2</span><span class="p">,</span><span class="nx">m</span><span class="o">+=</span><span class="p">(</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">j</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">l</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="k">return</span> <span class="nx">m</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">Q</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">R</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">Q</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">||</span><span class="nx">Q</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">R</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">))){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="nx">d</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">h</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">g</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="nx">d</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="nx">c</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">h</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">g</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">c</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">i</span><span class="o">/</span><span class="nx">k</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="o">/</span><span class="nx">k</span><span class="p">,</span><span class="nx">n</span><span class="o">=+</span><span class="nx">l</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="nx">o</span><span class="o">=+</span><span class="nx">m</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">n</span><span class="o">&lt;+</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">||</span><span class="nx">n</span><span class="o">&gt;+</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">||</span><span class="nx">n</span><span class="o">&lt;+</span><span class="nx">Q</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">||</span><span class="nx">n</span><span class="o">&gt;+</span><span class="nx">R</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">||</span><span class="nx">o</span><span class="o">&lt;+</span><span class="nx">Q</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">||</span><span class="nx">o</span><span class="o">&gt;+</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">||</span><span class="nx">o</span><span class="o">&lt;+</span><span class="nx">Q</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">||</span><span class="nx">o</span><span class="o">&gt;+</span><span class="nx">R</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">)))</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">m</span><span class="p">}}}}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">h</span><span class="o">=~~</span><span class="p">(</span><span class="nx">f</span><span class="o">/</span><span class="mi">5</span><span class="p">),</span><span class="nx">k</span><span class="o">=~~</span><span class="p">(</span><span class="nx">g</span><span class="o">/</span><span class="mi">5</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="p">[],</span><span class="nx">q</span><span class="o">=</span><span class="p">{},</span><span class="nx">r</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">[],</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">s</span><span class="o">/</span><span class="nx">h</span><span class="p">));</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">t</span><span class="o">:</span><span class="nx">s</span><span class="o">/</span><span class="nx">h</span><span class="p">})}</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">s</span><span class="o">/</span><span class="nx">k</span><span class="p">)),</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">t</span><span class="o">:</span><span class="nx">s</span><span class="o">/</span><span class="nx">k</span><span class="p">});</span><span class="k">for</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">u</span><span class="p">;</span><span class="nx">u</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">w</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="nx">s</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">x</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">u</span><span class="p">],</span><span class="nx">y</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">u</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">z</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">v</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">&lt;</span><span class="p">.</span><span class="mi">001</span><span class="o">?</span><span class="s2">&quot;y&quot;</span><span class="o">:</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">x</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">&lt;</span><span class="p">.</span><span class="mi">001</span><span class="o">?</span><span class="s2">&quot;y&quot;</span><span class="o">:</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">p</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">v</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">w</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">w</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="nx">B</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">)]</span><span class="o">==</span><span class="nx">B</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">))</span><span class="k">continue</span><span class="p">;</span><span class="nx">q</span><span class="p">[</span><span class="nx">B</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">)]</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">t</span><span class="o">+</span><span class="nx">T</span><span class="p">((</span><span class="nx">B</span><span class="p">[</span><span class="nx">z</span><span class="p">]</span><span class="o">-</span><span class="nx">v</span><span class="p">[</span><span class="nx">z</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="nx">z</span><span class="p">]</span><span class="o">-</span><span class="nx">v</span><span class="p">[</span><span class="nx">z</span><span class="p">]))</span><span class="o">*</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">t</span><span class="o">-</span><span class="nx">v</span><span class="p">.</span><span class="nx">t</span><span class="p">),</span><span class="nx">D</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="o">+</span><span class="nx">T</span><span class="p">((</span><span class="nx">B</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">-</span><span class="nx">x</span><span class="p">[</span><span class="nx">A</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">-</span><span class="nx">x</span><span class="p">[</span><span class="nx">A</span><span class="p">]))</span><span class="o">*</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">t</span><span class="o">-</span><span class="nx">x</span><span class="p">.</span><span class="nx">t</span><span class="p">);</span><span class="nx">C</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">r</span><span class="o">++:</span><span class="nx">r</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">B</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">B</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">t1</span><span class="o">:</span><span class="nx">C</span><span class="p">,</span><span class="nx">t2</span><span class="o">:</span><span class="nx">D</span><span class="p">}))}}</span><span class="k">return</span> <span class="nx">r</span><span class="p">}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">o</span><span class="p">;</span><span class="nx">o</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">o</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;M&quot;</span><span class="o">==</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="s2">&quot;C&quot;</span><span class="o">==</span><span class="nx">r</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="mi">7</span><span class="p">])</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="p">[</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">t</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">;</span><span class="nx">s</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">s</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;M&quot;</span><span class="o">==</span><span class="nx">u</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="nx">u</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="s2">&quot;C&quot;</span><span class="o">==</span><span class="nx">u</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="p">[</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)),</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">m</span><span class="p">[</span><span class="mi">7</span><span class="p">])</span><span class="o">:</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="p">[</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">q</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">n</span><span class="o">+=</span><span class="nx">v</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">w</span><span class="p">;</span><span class="nx">w</span><span class="o">++</span><span class="p">)</span><span class="nx">v</span><span class="p">[</span><span class="nx">w</span><span class="p">].</span><span class="nx">segment1</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">v</span><span class="p">[</span><span class="nx">w</span><span class="p">].</span><span class="nx">segment2</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">v</span><span class="p">[</span><span class="nx">w</span><span class="p">].</span><span class="nx">bez1</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">v</span><span class="p">[</span><span class="nx">w</span><span class="p">].</span><span class="nx">bez2</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">v</span><span class="p">)}}}}}</span><span class="k">return</span> <span class="nx">n</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">k</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">==</span><span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">,[[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">],[</span><span class="s2">&quot;H&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">x2</span><span class="o">+</span><span class="mi">10</span><span class="p">]],</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="p">}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">bbox</span><span class="p">)</span><span class="k">return</span> <span class="nx">K</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">bbox</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="p">[],</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span><span class="s2">&quot;M&quot;</span><span class="o">==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">E</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="mi">6</span><span class="p">]);</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">6</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">R</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="o">-</span><span class="nx">m</span><span class="p">,</span><span class="nx">p</span><span class="o">-</span><span class="nx">n</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">bbox</span><span class="o">=</span><span class="nx">K</span><span class="p">(</span><span class="nx">q</span><span class="p">),</span><span class="nx">q</span><span class="p">}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="k">return</span><span class="p">[[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">],[</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">],[</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="p">],[</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">],[</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="nx">f</span><span class="p">,</span><span class="o">-</span><span class="nx">f</span><span class="p">],[</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">],[</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">-</span><span class="nx">f</span><span class="p">],[</span><span class="s2">&quot;z&quot;</span><span class="p">]];</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">[[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">],[</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">],[</span><span class="s2">&quot;l&quot;</span><span class="p">,</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">],[</span><span class="s2">&quot;z&quot;</span><span class="p">]];</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">),</span><span class="kc">null</span><span class="o">!=</span><span class="nx">f</span><span class="p">)</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="o">-</span><span class="nx">d</span><span class="o">*</span><span class="nx">g</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">g</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="o">-</span><span class="nx">d</span><span class="o">*</span><span class="nx">g</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="o">-</span><span class="nx">f</span><span class="o">*</span><span class="nx">g</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="p">[[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">j</span><span class="p">],[</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">180</span><span class="p">),</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">]];</span><span class="k">else</span> <span class="nx">l</span><span class="o">=</span><span class="p">[[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">],[</span><span class="s2">&quot;m&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="nx">d</span><span class="p">],[</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">d</span><span class="p">],[</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">d</span><span class="p">],[</span><span class="s2">&quot;z&quot;</span><span class="p">]];</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="p">}</span><span class="kd">function</span> <span class="nx">y</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">rel</span><span class="p">)</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">rel</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parsePathString</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="s2">&quot;M&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">2</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">m</span><span class="o">++</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">]));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">;</span><span class="nx">n</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="p">[],</span><span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">n</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="nx">g</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span><span class="k">switch</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">case</span><span class="s2">&quot;a&quot;</span><span class="o">:</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">p</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">p</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">p</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">p</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=+</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">-</span><span class="nx">i</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">),</span><span class="nx">p</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=+</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">-</span><span class="nx">j</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;v&quot;</span><span class="o">:</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=+</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">j</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;m&quot;</span><span class="o">:</span><span class="nx">k</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">default</span><span class="o">:</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="nx">p</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=+</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="nx">r</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="nx">j</span><span class="p">)).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">p</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="p">[],</span><span class="s2">&quot;m&quot;</span><span class="o">==</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">j</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">u</span><span class="o">&gt;</span><span class="nx">t</span><span class="p">;</span><span class="nx">t</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">t</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="mi">0</span><span class="p">]){</span><span class="k">case</span><span class="s2">&quot;z&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;h&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">+=+</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">v</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;v&quot;</span><span class="o">:</span><span class="nx">j</span><span class="o">+=+</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">v</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">i</span><span class="o">+=+</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">v</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span><span class="nx">j</span><span class="o">+=+</span><span class="nx">h</span><span class="p">[</span><span class="nx">n</span><span class="p">][</span><span class="nx">v</span><span class="o">-</span><span class="mi">1</span><span class="p">]}}</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">rel</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">h</span><span class="p">}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">abs</span><span class="p">)</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">abs</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;array&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parsePathString</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="o">!</span><span class="nx">b</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">return</span><span class="p">[[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]];</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="s2">&quot;M&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=+</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">j</span><span class="o">=+</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">2</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">m</span><span class="o">++</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">3</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="s2">&quot;M&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;R&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="s2">&quot;Z&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="nx">q</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">q</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="p">[]),</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">q</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">!=</span><span class="nx">g</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">())</span><span class="k">switch</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">case</span><span class="s2">&quot;A&quot;</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">n</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">n</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">n</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">n</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">n</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=+</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="p">),</span><span class="nx">n</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">=+</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span><span class="o">+</span><span class="nx">j</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;V&quot;</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=+</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">j</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;H&quot;</span><span class="o">:</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=+</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;R&quot;</span><span class="o">:</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">[</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)),</span><span class="nx">t</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">u</span><span class="o">&gt;</span><span class="nx">t</span><span class="p">;</span><span class="nx">t</span><span class="o">++</span><span class="p">)</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=+</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">[</span><span class="o">++</span><span class="nx">t</span><span class="p">]</span><span class="o">=+</span><span class="nx">s</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">+</span><span class="nx">j</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">p</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;O&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">s</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;U&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="mi">3</span><span class="p">])),</span><span class="nx">n</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;U&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;M&quot;</span><span class="o">:</span><span class="nx">k</span><span class="o">=+</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="o">=+</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">j</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">u</span><span class="o">&gt;</span><span class="nx">t</span><span class="p">;</span><span class="nx">t</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=+</span><span class="nx">o</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">t</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="nx">j</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;R&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="nx">s</span><span class="o">=</span><span class="p">[</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)),</span><span class="nx">h</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">H</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">p</span><span class="p">)),</span><span class="nx">n</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;R&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">));</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;O&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">s</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="s2">&quot;U&quot;</span><span class="o">==</span><span class="nx">g</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">o</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="mi">3</span><span class="p">])),</span><span class="nx">n</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;U&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">));</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">w</span><span class="o">&gt;</span><span class="nx">v</span><span class="p">;</span><span class="nx">v</span><span class="o">++</span><span class="p">)</span><span class="nx">n</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">v</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="s2">&quot;O&quot;</span><span class="o">!=</span><span class="nx">g</span><span class="p">)</span><span class="k">switch</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">case</span><span class="s2">&quot;Z&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;H&quot;</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;V&quot;</span><span class="o">:</span><span class="nx">j</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;M&quot;</span><span class="o">:</span><span class="nx">k</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="k">default</span><span class="o">:</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]}}</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">abs</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">h</span><span class="p">}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">2</span><span class="o">/</span><span class="mi">3</span><span class="p">;</span><span class="k">return</span><span class="p">[</span><span class="nx">g</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">120</span><span class="o">*</span><span class="nx">P</span><span class="o">/</span><span class="mi">180</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">P</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="p">(</span><span class="o">+</span><span class="nx">f</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">cacher</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">O</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">-</span><span class="nx">b</span><span class="o">*</span><span class="nx">O</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">*</span><span class="nx">O</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">O</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">e</span><span class="p">}});</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="nx">y</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">z</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">w</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">x</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">else</span><span class="p">{</span><span class="nx">l</span><span class="o">=</span><span class="nx">p</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">-</span><span class="nx">n</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">p</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="o">-</span><span class="nx">n</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">P</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="nx">f</span><span class="p">),</span><span class="nx">O</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">P</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="nx">f</span><span class="p">),(</span><span class="nx">b</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">j</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">q</span><span class="o">*</span><span class="nx">q</span><span class="o">/</span><span class="p">(</span><span class="nx">d</span><span class="o">*</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="nx">r</span><span class="o">*</span><span class="nx">r</span><span class="o">/</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">e</span><span class="p">);</span><span class="nx">s</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">s</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="o">*</span><span class="nx">e</span><span class="p">);</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">d</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">e</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="o">==</span><span class="nx">h</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">O</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">T</span><span class="p">((</span><span class="nx">t</span><span class="o">*</span><span class="nx">u</span><span class="o">-</span><span class="nx">t</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">r</span><span class="o">-</span><span class="nx">u</span><span class="o">*</span><span class="nx">q</span><span class="o">*</span><span class="nx">q</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">t</span><span class="o">*</span><span class="nx">r</span><span class="o">*</span><span class="nx">r</span><span class="o">+</span><span class="nx">u</span><span class="o">*</span><span class="nx">q</span><span class="o">*</span><span class="nx">q</span><span class="p">))),</span><span class="nx">w</span><span class="o">=</span><span class="nx">v</span><span class="o">*</span><span class="nx">d</span><span class="o">*</span><span class="nx">r</span><span class="o">/</span><span class="nx">e</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">i</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">v</span><span class="o">*-</span><span class="nx">e</span><span class="o">*</span><span class="nx">q</span><span class="o">/</span><span class="nx">d</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">j</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">asin</span><span class="p">(((</span><span class="nx">c</span><span class="o">-</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="nx">e</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">)),</span><span class="nx">z</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">asin</span><span class="p">(((</span><span class="nx">j</span><span class="o">-</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="nx">e</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">9</span><span class="p">));</span><span class="nx">y</span><span class="o">=</span><span class="nx">w</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">P</span><span class="o">-</span><span class="nx">y</span><span class="o">:</span><span class="nx">y</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">w</span><span class="o">&gt;</span><span class="nx">i</span><span class="o">?</span><span class="nx">P</span><span class="o">-</span><span class="nx">z</span><span class="o">:</span><span class="nx">z</span><span class="p">,</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">P</span><span class="o">+</span><span class="nx">y</span><span class="p">),</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">P</span><span class="o">+</span><span class="nx">z</span><span class="p">),</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">-=</span><span class="mi">2</span><span class="o">*</span><span class="nx">P</span><span class="p">),</span><span class="o">!</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="o">&gt;</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="o">-=</span><span class="mi">2</span><span class="o">*</span><span class="nx">P</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">z</span><span class="o">-</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">(</span><span class="nx">A</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">m</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">z</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">z</span><span class="o">=</span><span class="nx">y</span><span class="o">+</span><span class="nx">m</span><span class="o">*</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="o">&gt;</span><span class="nx">y</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">w</span><span class="o">+</span><span class="nx">d</span><span class="o">*</span><span class="nx">O</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">z</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">x</span><span class="o">+</span><span class="nx">e</span><span class="o">*</span><span class="nx">O</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">z</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">C</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">E</span><span class="p">,[</span><span class="nx">z</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">w</span><span class="p">,</span><span class="nx">x</span><span class="p">])}</span><span class="nx">A</span><span class="o">=</span><span class="nx">z</span><span class="o">-</span><span class="nx">y</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">y</span><span class="p">),</span><span class="nx">G</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">y</span><span class="p">),</span><span class="nx">H</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">z</span><span class="p">),</span><span class="nx">I</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">z</span><span class="p">),</span><span class="nx">J</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">tan</span><span class="p">(</span><span class="nx">A</span><span class="o">/</span><span class="mi">4</span><span class="p">),</span><span class="nx">K</span><span class="o">=</span><span class="mi">4</span><span class="o">/</span><span class="mi">3</span><span class="o">*</span><span class="nx">d</span><span class="o">*</span><span class="nx">J</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="mi">4</span><span class="o">/</span><span class="mi">3</span><span class="o">*</span><span class="nx">e</span><span class="o">*</span><span class="nx">J</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">],</span><span class="nx">N</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="nx">K</span><span class="o">*</span><span class="nx">G</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">L</span><span class="o">*</span><span class="nx">F</span><span class="p">],</span><span class="nx">Q</span><span class="o">=</span><span class="p">[</span><span class="nx">i</span><span class="o">+</span><span class="nx">K</span><span class="o">*</span><span class="nx">I</span><span class="p">,</span><span class="nx">j</span><span class="o">-</span><span class="nx">L</span><span class="o">*</span><span class="nx">H</span><span class="p">],</span><span class="nx">R</span><span class="o">=</span><span class="p">[</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">M</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">N</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">N</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">M</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">N</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="p">)</span><span class="k">return</span><span class="p">[</span><span class="nx">N</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">R</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">o</span><span class="p">);</span><span class="nx">o</span><span class="o">=</span><span class="p">[</span><span class="nx">N</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">R</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">join</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="p">[],</span><span class="nx">U</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">V</span><span class="o">&gt;</span><span class="nx">U</span><span class="p">;</span><span class="nx">U</span><span class="o">++</span><span class="p">)</span><span class="nx">S</span><span class="p">[</span><span class="nx">U</span><span class="p">]</span><span class="o">=</span><span class="nx">U</span><span class="o">%</span><span class="mi">2</span><span class="o">?</span><span class="nx">p</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">U</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="nx">U</span><span class="p">],</span><span class="nx">n</span><span class="p">).</span><span class="nx">y</span><span class="o">:</span><span class="nx">p</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">U</span><span class="p">],</span><span class="nx">o</span><span class="p">[</span><span class="nx">U</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">n</span><span class="p">).</span><span class="nx">x</span><span class="p">;</span><span class="k">return</span> <span class="nx">S</span><span class="p">}</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">1</span><span class="o">-</span><span class="nx">i</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">S</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">S</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">S</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">S</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">i</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">S</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="o">*</span><span class="nx">h</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">a</span><span class="o">-</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">c</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">a</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nx">c</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="nx">k</span><span class="o">+</span><span class="nx">O</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">k</span><span class="o">*</span><span class="nx">k</span><span class="o">-</span><span class="mi">4</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">l</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="o">/</span><span class="nx">j</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="nx">k</span><span class="o">-</span><span class="nx">O</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">k</span><span class="o">*</span><span class="nx">k</span><span class="o">-</span><span class="mi">4</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">l</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="o">/</span><span class="nx">j</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">];</span><span class="k">return</span> <span class="nx">T</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">&gt;</span><span class="s2">&quot;1e12&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="p">.</span><span class="mi">5</span><span class="p">),</span><span class="nx">T</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">&gt;</span><span class="s2">&quot;1e12&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="p">.</span><span class="mi">5</span><span class="p">),</span><span class="nx">m</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="p">)),</span><span class="nx">n</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="p">)),</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">b</span><span class="o">-</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="o">+</span><span class="nx">d</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="o">-</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="nx">k</span><span class="o">+</span><span class="nx">O</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">k</span><span class="o">*</span><span class="nx">k</span><span class="o">-</span><span class="mi">4</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">l</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="o">/</span><span class="nx">j</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="nx">k</span><span class="o">-</span><span class="nx">O</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">k</span><span class="o">*</span><span class="nx">k</span><span class="o">-</span><span class="mi">4</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="nx">l</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="o">/</span><span class="nx">j</span><span class="p">,</span><span class="nx">T</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">&gt;</span><span class="s2">&quot;1e12&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="p">.</span><span class="mi">5</span><span class="p">),</span><span class="nx">T</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">&gt;</span><span class="s2">&quot;1e12&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="p">.</span><span class="mi">5</span><span class="p">),</span><span class="nx">m</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="p">)),</span><span class="nx">n</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">&gt;</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">p</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="p">)),{</span><span class="nx">min</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">Q</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">Q</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">)},</span><span class="nx">max</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">R</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">R</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">)}}}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">curve</span><span class="p">)</span><span class="k">return</span> <span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">curve</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">bx</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">by</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">Y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">qx</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">qy</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">bx</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">by</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">X</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">Y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">qx</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">qy</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">j</span><span class="o">=</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">];</span><span class="k">switch</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="k">in</span><span class="p">{</span><span class="nx">T</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">Q</span><span class="o">:</span><span class="mi">1</span><span class="p">})</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">qx</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">qy</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]){</span><span class="k">case</span><span class="s2">&quot;M&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">X</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">Y</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;A&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,[</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">))));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;S&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">bx</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">)),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">by</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;T&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">qx</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">qx</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">qy</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">qy</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">qx</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">qy</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;Q&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">qx</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">qy</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">]));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;L&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;H&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;V&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;Z&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">A</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">X</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">Y</span><span class="p">))}</span><span class="k">return</span> <span class="nx">a</span><span class="p">}),</span><span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">7</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">shift</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="o">++</span><span class="p">,</span><span class="mi">0</span><span class="p">,[</span><span class="s2">&quot;C&quot;</span><span class="p">].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">6</span><span class="p">)));</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">R</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">0</span><span class="p">)}},</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;M&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="s2">&quot;M&quot;</span><span class="o">!=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">,[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">]),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">by</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">][</span><span class="mi">2</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="nx">R</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">0</span><span class="p">))},</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">R</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">m</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">){</span><span class="nx">e</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">h</span><span class="p">),</span><span class="nx">k</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">i</span><span class="p">)),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">l</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">l</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">q</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">o</span><span class="p">[</span><span class="nx">q</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">h</span><span class="p">.</span><span class="nx">bx</span><span class="o">=</span><span class="nx">N</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">q</span><span class="o">-</span><span class="mi">4</span><span class="p">])</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">by</span><span class="o">=</span><span class="nx">N</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">q</span><span class="o">-</span><span class="mi">3</span><span class="p">])</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">bx</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">N</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">r</span><span class="o">-</span><span class="mi">4</span><span class="p">])</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">by</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">N</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="nx">r</span><span class="o">-</span><span class="mi">3</span><span class="p">])</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="nx">r</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span><span class="nx">i</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="nx">r</span><span class="o">-</span><span class="mi">1</span><span class="p">]}</span><span class="k">return</span> <span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">curve</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">e</span><span class="p">)),</span><span class="nx">g</span><span class="o">?</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">]</span><span class="o">:</span><span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">+=</span><span class="mi">2</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">]),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">]),</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">-</span><span class="mi">2</span><span class="o">*!</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">+=</span><span class="mi">2</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">[{</span><span class="nx">x</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span><span class="nx">y</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">]},{</span><span class="nx">x</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">y</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">]},{</span><span class="nx">x</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">2</span><span class="p">],</span><span class="nx">y</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">3</span><span class="p">]},{</span><span class="nx">x</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">4</span><span class="p">],</span><span class="nx">y</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">5</span><span class="p">]}];</span><span class="nx">b</span><span class="o">?</span><span class="nx">d</span><span class="o">?</span><span class="nx">e</span><span class="o">-</span><span class="mi">4</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">y</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]}</span><span class="o">:</span><span class="nx">e</span><span class="o">-</span><span class="mi">2</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">y</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]},</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">y</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]})</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span><span class="nx">y</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">]}</span><span class="o">:</span><span class="nx">e</span><span class="o">-</span><span class="mi">4</span><span class="o">==</span><span class="nx">d</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">y</span><span class="o">:+</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">]}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="s2">&quot;C&quot;</span><span class="p">,(</span><span class="o">-</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">x</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="mi">6</span><span class="p">,(</span><span class="o">-</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">y</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">y</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="o">/</span><span class="mi">6</span><span class="p">,(</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">x</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">x</span><span class="o">-</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="mi">6</span><span class="p">,(</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">y</span><span class="o">+</span><span class="mi">6</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">y</span><span class="o">-</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">].</span><span class="nx">y</span><span class="p">)</span><span class="o">/</span><span class="mi">6</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">y</span><span class="p">])}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">is</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">clone</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="s2">&quot;hasOwnProperty&quot;</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="sr">/,?([a-z]),?/gi</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nb">Math</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">pow</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">O</span><span class="p">.</span><span class="nx">abs</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">V</span><span class="o">=</span><span class="nx">h</span><span class="p">(),</span><span class="nx">W</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">X</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_unit2px</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="p">{</span><span class="nx">path</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;path&quot;</span><span class="p">)},</span><span class="nx">circle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">cx</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">cy</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">r</span><span class="p">)},</span><span class="nx">ellipse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">cx</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">cy</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">rx</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ry</span><span class="p">)},</span><span class="nx">rect</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">rx</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ry</span><span class="p">)},</span><span class="nx">image</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">)},</span><span class="nx">text</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">();</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">)},</span><span class="nx">g</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">();</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">)},</span><span class="nx">symbol</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">();</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">)},</span><span class="nx">line</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;M&quot;</span><span class="o">+</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x1&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y1&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x2&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y2&quot;</span><span class="p">)]},</span><span class="nx">polyline</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;M&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;points&quot;</span><span class="p">)},</span><span class="nx">polygon</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;M&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;points&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;z&quot;</span><span class="p">},</span><span class="nx">svg</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">();</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">)},</span><span class="nx">deflt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">();</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">)}};</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">getTotalLength</span><span class="o">=</span><span class="nx">U</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">getPointAtLength</span><span class="o">=</span><span class="nx">V</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">getSubpath</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getTotalLength</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">-</span><span class="nx">c</span><span class="o">&lt;</span><span class="mi">1</span><span class="nx">e</span><span class="o">-</span><span class="mi">6</span><span class="p">)</span><span class="k">return</span> <span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">end</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">W</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">end</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="nx">I</span><span class="p">.</span><span class="nx">getTotalLength</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getTotalLength</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">getTotalLength</span><span class="p">()</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">},</span><span class="nx">I</span><span class="p">.</span><span class="nx">getPointAtLength</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">V</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">)},</span><span class="nx">I</span><span class="p">.</span><span class="nx">getSubpath</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">getSubpath</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">box</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">findDotsAtSegment</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">bezierBBox</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">isPointInsideBBox</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">isBBoxIntersect</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">intersection</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">intersectionNumber</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">isPointInside</span><span class="o">=</span><span class="nx">u</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">getBBox</span><span class="o">=</span><span class="nx">v</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">get</span><span class="o">=</span><span class="nx">Y</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toRelative</span><span class="o">=</span><span class="nx">y</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toAbsolute</span><span class="o">=</span><span class="nx">z</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toCubic</span><span class="o">=</span><span class="nx">F</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">map</span><span class="o">=</span><span class="nx">G</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="nx">f</span><span class="p">}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">plugin</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;set&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">++</span><span class="p">)},</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">++</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">pop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">--</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">pop</span><span class="p">()},</span><span class="nx">e</span><span class="p">.</span><span class="nx">forEach</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">c</span><span class="p">)</span><span class="o">===!</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">remove</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="p">().</span><span class="nx">remove</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">clear</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">pop</span><span class="p">()},</span><span class="nx">e</span><span class="p">.</span><span class="nx">splice</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">));</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[],</span><span class="nx">h</span><span class="o">=</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="nx">f</span><span class="p">]);</span><span class="k">for</span><span class="p">(;</span><span class="nx">f</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">a</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="nx">f</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">j</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">?</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="o">-</span><span class="nx">j</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">-=</span><span class="nx">e</span><span class="o">-</span><span class="nx">j</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">];)</span><span class="k">delete</span> <span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="o">++</span><span class="p">];</span><span class="k">return</span> <span class="k">new</span> <span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">)},</span><span class="nx">e</span><span class="p">.</span><span class="nx">exclude</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">==</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">insertAfter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">getBBox</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">removed</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">getBBox</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">),{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">,</span><span class="nx">cx</span><span class="o">:</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">cy</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">}},</span><span class="nx">e</span><span class="p">.</span><span class="nx">clone</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">clone</span><span class="p">());</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Snap‘s set&quot;</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;set&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">set</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">)),</span><span class="nx">a</span><span class="p">}}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">plugin</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()){</span><span class="k">case</span><span class="s2">&quot;t&quot;</span><span class="o">:</span><span class="k">return</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span><span class="k">case</span><span class="s2">&quot;m&quot;</span><span class="o">:</span><span class="k">return</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span><span class="k">case</span><span class="s2">&quot;r&quot;</span><span class="o">:</span><span class="k">return</span> <span class="mi">4</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">]]</span><span class="o">:</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">];</span><span class="k">case</span><span class="s2">&quot;s&quot;</span><span class="o">:</span><span class="k">return</span> <span class="mi">5</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">]]</span><span class="o">:</span><span class="mi">3</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">]}}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\.{3}|\u2026/g</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parseTransformString</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parseTransformString</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">||</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="o">=</span><span class="p">[],</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">p</span><span class="p">]),</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;r&quot;</span><span class="o">==</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">!=</span><span class="nx">k</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">j</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">!=</span><span class="nx">k</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span><span class="o">||</span><span class="s2">&quot;s&quot;</span><span class="o">==</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">!=</span><span class="nx">k</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">||</span><span class="nx">j</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">!=</span><span class="nx">k</span><span class="p">[</span><span class="mi">4</span><span class="p">])){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">transform2matrix</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">()),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">transform2matrix</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">()),</span><span class="nx">n</span><span class="o">=</span><span class="p">[[</span><span class="s2">&quot;m&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">f</span><span class="p">]],</span><span class="nx">o</span><span class="o">=</span><span class="p">[[</span><span class="s2">&quot;m&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">]];</span><span class="k">break</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">f</span><span class="p">]),</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">f</span><span class="p">])}</span><span class="k">return</span><span class="p">{</span><span class="nx">from</span><span class="o">:</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">to</span><span class="o">:</span><span class="nx">i</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">f</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="nx">n</span><span class="p">)}}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">rgb</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">])}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;[&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;val[&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">++</span> <span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">;</span><span class="nx">f</span><span class="o">+=</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span> <span class="nb">Function</span><span class="p">(</span><span class="s2">&quot;val&quot;</span><span class="p">,</span><span class="s2">&quot;return Snap.path.toString.call([&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;])&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">e</span><span class="p">]);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="p">{},</span><span class="nx">k</span><span class="o">=</span><span class="sr">/[a-z]+$/i</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nb">String</span><span class="p">;</span><span class="nx">j</span><span class="p">.</span><span class="nx">stroke</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">fill</span><span class="o">=</span><span class="s2">&quot;colour&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">equal</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="o">==+</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">==+</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="p">{</span><span class="nx">from</span><span class="o">:+</span><span class="nx">o</span><span class="p">,</span><span class="nx">to</span><span class="o">:+</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="o">:</span><span class="nx">e</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;colour&quot;</span><span class="o">==</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="k">return</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="p">(</span><span class="nx">c</span><span class="p">),{</span><span class="nx">from</span><span class="o">:</span><span class="p">[</span><span class="nx">m</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">opacity</span><span class="p">],</span><span class="nx">to</span><span class="o">:</span><span class="p">[</span><span class="nx">n</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">opacity</span><span class="p">],</span><span class="nx">f</span><span class="o">:</span><span class="nx">g</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;gradientTransform&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;patternTransform&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span> <span class="k">instanceof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">Matrix</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">toTransformString</span><span class="p">()),</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">rgTransform</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">svgTransform2string</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="nx">d</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">p</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">(</span><span class="mi">1</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;path&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">.</span><span class="nx">toCubic</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">c</span><span class="p">),{</span><span class="nx">from</span><span class="o">:</span><span class="nx">i</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">to</span><span class="o">:</span><span class="nx">i</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">f</span><span class="o">:</span><span class="nx">h</span><span class="p">(</span><span class="nx">m</span><span class="p">[</span><span class="mi">0</span><span class="p">])};</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;points&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span> <span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),{</span><span class="nx">from</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">to</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">f</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">l</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="nx">k</span><span class="p">);</span><span class="k">return</span> <span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="o">==</span><span class="nx">r</span><span class="o">?</span><span class="p">{</span><span class="nx">from</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">to</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">f</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="nx">q</span><span class="p">)}</span><span class="o">:</span><span class="p">{</span><span class="nx">from</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">asPX</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">to</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">asPX</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">f</span><span class="o">:</span><span class="nx">e</span><span class="p">}}}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">plugin</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;hasOwnProperty&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;createTouch&quot;</span><span class="k">in</span> <span class="nx">e</span><span class="p">.</span><span class="nx">doc</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="s2">&quot;dblclick&quot;</span><span class="p">,</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="s2">&quot;touchend&quot;</span><span class="p">,</span><span class="s2">&quot;touchcancel&quot;</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">mousedown</span><span class="o">:</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="nx">mousemove</span><span class="o">:</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="nx">mouseup</span><span class="o">:</span><span class="s2">&quot;touchend&quot;</span><span class="p">},</span><span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;y&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;scrollTop&quot;</span><span class="o">:</span><span class="s2">&quot;scrollLeft&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">body</span><span class="p">[</span><span class="nx">b</span><span class="p">]},</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">originalEvent</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()},</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">cancelBubble</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">originalEvent</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()},</span><span class="nx">p</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">g</span><span class="p">](</span><span class="nx">b</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">targetTouches</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">targetTouches</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">n</span><span class="o">&gt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">targetTouches</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">target</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">targetTouches</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">target</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">targetTouches</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">e</span><span class="p">.</span><span class="nx">originalEvent</span><span class="o">=</span><span class="nx">p</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">=</span><span class="nx">o</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientX</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">clientY</span><span class="o">+</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">r</span><span class="p">)};</span><span class="k">return</span> <span class="nx">b</span><span class="o">!==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="o">!==</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">}}</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">doc</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">win</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientX</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientY</span><span class="o">+</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">||</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="o">||</span><span class="nx">n</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">)};</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">};</span><span class="k">return</span> <span class="nx">g</span><span class="p">}</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">}(),</span><span class="nx">q</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">clientX</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">clientY</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">j</span><span class="o">--</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span><span class="nx">h</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">touches</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">touches</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">l</span><span class="p">.</span><span class="nx">identifier</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">_drag</span><span class="p">.</span><span class="nx">id</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">target</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">clientX</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">clientY</span><span class="p">,(</span><span class="nx">c</span><span class="p">.</span><span class="nx">originalEvent</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">originalEvent</span><span class="o">:</span><span class="nx">c</span><span class="p">).</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">break</span><span class="p">}}</span><span class="k">else</span> <span class="nx">c</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">node</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">glob</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="p">,</span><span class="nx">e</span><span class="o">+=</span><span class="nx">i</span><span class="p">,</span><span class="nx">f</span><span class="o">+=</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.drag.move.&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">move_scope</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">_drag</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">_drag</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">)}},</span><span class="nx">s</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">unmousemove</span><span class="p">(</span><span class="nx">r</span><span class="p">).</span><span class="nx">unmouseup</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">_drag</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.drag.end.&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">end_scope</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">start_scope</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">move_scope</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">el</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">q</span><span class="o">=</span><span class="p">[]},</span><span class="nx">t</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">t</span><span class="o">--</span><span class="p">;)</span><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">||</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">name</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">unbind</span><span class="o">:</span><span class="nx">p</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">shape</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">doc</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">||</span><span class="k">this</span><span class="p">)})),</span><span class="k">this</span><span class="p">},</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;un&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="s2">&quot;un&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">||</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">name</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">f</span><span class="o">==</span><span class="nx">a</span><span class="o">||!</span><span class="nx">a</span><span class="p">))</span><span class="k">return</span> <span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">unbind</span><span class="p">(),</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="p">,</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">}}(</span><span class="nx">i</span><span class="p">[</span><span class="nx">t</span><span class="p">]);</span><span class="nx">f</span><span class="p">.</span><span class="nx">hover</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">mouseover</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">).</span><span class="nx">mouseout</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">||</span><span class="nx">c</span><span class="p">)},</span><span class="nx">f</span><span class="p">.</span><span class="nx">unhover</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">unmouseover</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">unmouseout</span><span class="p">(</span><span class="nx">b</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="p">[];</span><span class="nx">f</span><span class="p">.</span><span class="nx">drag</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">){(</span><span class="nx">i</span><span class="p">.</span><span class="nx">originalEvent</span><span class="o">||</span><span class="nx">i</span><span class="p">).</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">_drag</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_drag</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_drag</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">identifier</span><span class="p">,</span><span class="o">!</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">mousemove</span><span class="p">(</span><span class="nx">r</span><span class="p">).</span><span class="nx">mouseup</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">el</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">move_scope</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">start_scope</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">end_scope</span><span class="o">:</span><span class="nx">h</span><span class="p">}),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.drag.start.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.drag.move.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.drag.end.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="s2">&quot;snap.drag.start.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">g</span><span class="o">||</span><span class="nx">f</span><span class="o">||</span><span class="k">this</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">drag</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">transform</span><span class="o">:</span><span class="nx">j</span><span class="o">+</span><span class="p">(</span><span class="nx">j</span><span class="o">?</span><span class="s2">&quot;T&quot;</span><span class="o">:</span><span class="s2">&quot;t&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">]})},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">transform</span><span class="p">().</span><span class="nx">local</span><span class="p">})}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_drag</span><span class="o">=</span><span class="p">{},</span><span class="nx">u</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">el</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="nx">i</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">mousedown</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">f</span><span class="p">.</span><span class="nx">undrag</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="nx">u</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">el</span><span class="o">==</span><span class="k">this</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">unmousedown</span><span class="p">(</span><span class="nx">u</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">start</span><span class="p">),</span><span class="nx">u</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;snap.drag.*.&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="p">));</span><span class="k">return</span><span class="o">!</span><span class="nx">u</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">unmousemove</span><span class="p">(</span><span class="nx">r</span><span class="p">).</span><span class="nx">unmouseup</span><span class="p">(</span><span class="nx">s</span><span class="p">),</span><span class="k">this</span><span class="p">}}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">plugin</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">prototype</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="sr">/^\s*url\((.+)\)/</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nb">String</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">$</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="p">{},</span><span class="nx">e</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="s2">&quot;svg&quot;</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">paper</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">)),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_</span><span class="p">.</span><span class="nx">id</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">h</span><span class="p">(</span><span class="s2">&quot;filter&quot;</span><span class="p">));</span><span class="k">return</span> <span class="nx">h</span><span class="p">(</span><span class="nx">i</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">filterUnits</span><span class="o">:</span><span class="s2">&quot;userSpaceOnUse&quot;</span><span class="p">}),</span><span class="nx">i</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">node</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">defs</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="k">new</span> <span class="nx">c</span><span class="p">(</span><span class="nx">i</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.getattr.filter&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,</span><span class="s2">&quot;filter&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">match</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">])}}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;snap.util.attr.filter&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span> <span class="k">instanceof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;filter&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">h</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="p">}),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">id</span><span class="p">),</span><span class="nx">h</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">,{</span><span class="nx">filter</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">url</span><span class="p">(</span><span class="nx">e</span><span class="p">)})}</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="s2">&quot;none&quot;</span><span class="o">!=</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stop</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">node</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;filter&quot;</span><span class="p">))}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">blur</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;&lt;feGaussianBlur stdDeviation=&quot;{def}&quot;/&gt;&#39;</span><span class="p">,{</span><span class="nx">def</span><span class="o">:</span><span class="nx">d</span><span class="p">})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">blur</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">shadow</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="s2">&quot;#000&quot;</span><span class="p">,</span><span class="kc">null</span><span class="o">==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">4</span><span class="p">),</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">4</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">2</span><span class="p">),</span><span class="kc">null</span><span class="o">==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;&lt;feGaussianBlur in=&quot;SourceAlpha&quot; stdDeviation=&quot;{blur}&quot;/&gt;&lt;feOffset dx=&quot;{dx}&quot; dy=&quot;{dy}&quot; result=&quot;offsetblur&quot;/&gt;&lt;feFlood flood-color=&quot;{color}&quot;/&gt;&lt;feComposite in2=&quot;offsetblur&quot; operator=&quot;in&quot;/&gt;&lt;feMerge&gt;&lt;feMergeNode/&gt;&lt;feMergeNode in=&quot;SourceGraphic&quot;/&gt;&lt;/feMerge&gt;&#39;</span><span class="p">,{</span><span class="nx">color</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">dx</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">dy</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">blur</span><span class="o">:</span><span class="nx">d</span><span class="p">})</span></div><div class='line' id='LC20'><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">shadow</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">grayscale</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;&lt;feColorMatrix type=&quot;matrix&quot; values=&quot;{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0&quot;/&gt;&#39;</span><span class="p">,{</span><span class="nx">a</span><span class="o">:</span><span class="p">.</span><span class="mi">2126</span><span class="o">+</span><span class="p">.</span><span class="mi">7874</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">:</span><span class="p">.</span><span class="mi">7152</span><span class="o">-</span><span class="p">.</span><span class="mi">7152</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="o">:</span><span class="p">.</span><span class="mi">0722</span><span class="o">-</span><span class="p">.</span><span class="mi">0722</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">:</span><span class="p">.</span><span class="mi">2126</span><span class="o">-</span><span class="p">.</span><span class="mi">2126</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">:</span><span class="p">.</span><span class="mi">7152</span><span class="o">+</span><span class="p">.</span><span class="mi">2848</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">:</span><span class="p">.</span><span class="mi">0722</span><span class="o">-</span><span class="p">.</span><span class="mi">0722</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">:</span><span class="p">.</span><span class="mi">2126</span><span class="o">-</span><span class="p">.</span><span class="mi">2126</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">h</span><span class="o">:</span><span class="p">.</span><span class="mi">0722</span><span class="o">+</span><span class="p">.</span><span class="mi">9278</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">)})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">grayscale</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">sepia</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;&lt;feColorMatrix type=&quot;matrix&quot; values=&quot;{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0&quot;/&gt;&#39;</span><span class="p">,{</span><span class="nx">a</span><span class="o">:</span><span class="p">.</span><span class="mi">393</span><span class="o">+</span><span class="p">.</span><span class="mi">607</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="o">:</span><span class="p">.</span><span class="mi">769</span><span class="o">-</span><span class="p">.</span><span class="mi">769</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="o">:</span><span class="p">.</span><span class="mi">189</span><span class="o">-</span><span class="p">.</span><span class="mi">189</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">:</span><span class="p">.</span><span class="mi">349</span><span class="o">-</span><span class="p">.</span><span class="mi">349</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="o">:</span><span class="p">.</span><span class="mi">686</span><span class="o">+</span><span class="p">.</span><span class="mi">314</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">f</span><span class="o">:</span><span class="p">.</span><span class="mi">168</span><span class="o">-</span><span class="p">.</span><span class="mi">168</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">:</span><span class="p">.</span><span class="mi">272</span><span class="o">-</span><span class="p">.</span><span class="mi">272</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">h</span><span class="o">:</span><span class="p">.</span><span class="mi">534</span><span class="o">-</span><span class="p">.</span><span class="mi">534</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">),</span><span class="nx">i</span><span class="o">:</span><span class="p">.</span><span class="mi">131</span><span class="o">+</span><span class="p">.</span><span class="mi">869</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">)})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">sepia</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">saturate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;&lt;feColorMatrix type=&quot;saturate&quot; values=&quot;{amount}&quot;/&gt;&#39;</span><span class="p">,{</span><span class="nx">amount</span><span class="o">:</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">saturate</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">hueRotate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;&lt;feColorMatrix type=&quot;hueRotate&quot; values=&quot;{angle}&quot;/&gt;&#39;</span><span class="p">,{</span><span class="nx">angle</span><span class="o">:</span><span class="nx">b</span><span class="p">})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">hueRotate</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">invert</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;&lt;feComponentTransfer&gt;&lt;feFuncR type=&quot;table&quot; tableValues=&quot;{amount} {amount2}&quot;/&gt;&lt;feFuncG type=&quot;table&quot; tableValues=&quot;{amount} {amount2}&quot;/&gt;&lt;feFuncB type=&quot;table&quot; tableValues=&quot;{amount} {amount2}&quot;/&gt;&lt;/feComponentTransfer&gt;&#39;</span><span class="p">,{</span><span class="nx">amount</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">amount2</span><span class="o">:</span><span class="mi">1</span><span class="o">-</span><span class="nx">b</span><span class="p">})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">invert</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">brightness</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;&lt;feComponentTransfer&gt;&lt;feFuncR type=&quot;linear&quot; slope=&quot;{amount}&quot;/&gt;&lt;feFuncG type=&quot;linear&quot; slope=&quot;{amount}&quot;/&gt;&lt;feFuncB type=&quot;linear&quot; slope=&quot;{amount}&quot;/&gt;&lt;/feComponentTransfer&gt;&#39;</span><span class="p">,{</span><span class="nx">amount</span><span class="o">:</span><span class="nx">b</span><span class="p">})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">brightness</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">contrast</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="s1">&#39;&lt;feComponentTransfer&gt;&lt;feFuncR type=&quot;linear&quot; slope=&quot;{amount}&quot; intercept=&quot;{amount2}&quot;/&gt;&lt;feFuncG type=&quot;linear&quot; slope=&quot;{amount}&quot; intercept=&quot;{amount2}&quot;/&gt;&lt;feFuncB type=&quot;linear&quot; slope=&quot;{amount}&quot; intercept=&quot;{amount2}&quot;/&gt;&lt;/feComponentTransfer&gt;&#39;</span><span class="p">,{</span><span class="nx">amount</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">amount2</span><span class="o">:</span><span class="p">.</span><span class="mi">5</span><span class="o">-</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">.</span><span class="nx">contrast</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">()}}),</span><span class="nx">d</span><span class="p">});</span></div></pre></div>
            </td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.02679s from github-fe137-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/adobe-webplatform/Snap.svg/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

